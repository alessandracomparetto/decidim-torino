{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n/* eslint-disable require-jsdoc */\n// ORGINAL: https://github.com/quilljs/delta/blob/ddda3bf088cda3ec03d5dbcc1179679d147f3a02/src/AttributeMap.ts\n\n\nexport default function attributeDiff(attributes1, attributes2) {\n  var alpha = attributes1;\n  var beta = attributes2;\n\n  if (_typeof(alpha) !== \"object\") {\n    alpha = {};\n  }\n\n  if (_typeof(beta) !== \"object\") {\n    beta = {};\n  }\n\n  var attributes = Object.keys(alpha).concat(Object.keys(beta)).reduce(function (attrs, key) {\n    // ORGINAL: import isEqual from 'lodash.isequal'; if (!isEqual(a[key], b[key]))\n    if (alpha[key] !== beta[key]) {\n      attrs[key] = null;\n\n      if (beta[key]) {\n        attrs[key] = beta[key];\n      }\n    }\n\n    return attrs;\n  }, {});\n\n  if (Object.keys(attributes).length > 0) {\n    return attributes;\n  }\n\n  return null;\n}","map":{"version":3,"mappings":";;;;;;;;;AAAA;AAEA;;;AACA,eAAe,SAASA,aAAT,CAAuBC,WAAvB,EAAoCC,WAApC,EAAiD;AAC9D,MAAIC,KAAK,GAAGF,WAAZ;AACA,MAAIG,IAAI,GAAGF,WAAX;;AACA,MAAIG,QAAOF,KAAP,MAAiB,QAArB,EAA+B;AAC7BA,SAAK,GAAG,EAARA;AACD;;AACD,MAAIE,QAAOD,IAAP,MAAgB,QAApB,EAA8B;AAC5BA,QAAI,GAAG,EAAPA;AACD;;AACD,MAAME,UAAU,GAAGC,MAAM,CAACC,IAAPD,CAAYJ,KAAZI,EAAmBE,MAAnBF,CAA0BA,MAAM,CAACC,IAAPD,CAAYH,IAAZG,CAA1BA,EAA6CG,MAA7CH,CAAoD,UAACI,KAAD,EAAQC,GAAR,EAAgB;AACrF;AACA,QAAKT,KAAK,CAACS,GAAD,CAALT,KAAeC,IAAI,CAACQ,GAAD,CAAxB,EAAgC;AAC9BD,WAAK,CAACC,GAAD,CAALD,GAAa,IAAbA;;AACA,UAAIP,IAAI,CAACQ,GAAD,CAAR,EAAe;AACbD,aAAK,CAACC,GAAD,CAALD,GAAaP,IAAI,CAACQ,GAAD,CAAjBD;AACD;AACF;;AACD,WAAOA,KAAP;AARiB,KAShB,EATgBJ,CAAnB;;AAWA,MAAIA,MAAM,CAACC,IAAPD,CAAYD,UAAZC,EAAwBM,MAAxBN,GAAiC,CAArC,EAAwC;AACtC,WAAOD,UAAP;AACD;;AACD,SAAO,IAAP;AACD","names":["attributeDiff","attributes1","attributes2","alpha","beta","_typeof","attributes","Object","keys","concat","reduce","attrs","key","length"],"sources":["/var/lib/gems/2.7.0/gems/decidim-core-0.26.0/app/packs/src/decidim/editor/attribute_diff.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\n\n// ORGINAL: https://github.com/quilljs/delta/blob/ddda3bf088cda3ec03d5dbcc1179679d147f3a02/src/AttributeMap.ts\nexport default function attributeDiff(attributes1, attributes2) {\n  let alpha = attributes1;\n  let beta = attributes2;\n  if (typeof alpha !== \"object\") {\n    alpha = {};\n  }\n  if (typeof beta !== \"object\") {\n    beta = {};\n  }\n  const attributes = Object.keys(alpha).concat(Object.keys(beta)).reduce((attrs, key) => {\n    // ORGINAL: import isEqual from 'lodash.isequal'; if (!isEqual(a[key], b[key]))\n    if ((alpha[key] !== beta[key])) {\n      attrs[key] = null;\n      if (beta[key]) {\n        attrs[key] = beta[key]\n      }\n    }\n    return attrs;\n  }, {});\n\n  if (Object.keys(attributes).length > 0) {\n    return attributes;\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}