{"ast":null,"code":"var currentAllocationZero = function currentAllocationZero() {\n  var $budgetSummary = $(\".budget-summary__progressbox\");\n  return parseInt($budgetSummary.attr(\"data-current-allocation\"), 10) === 0;\n};\n\nvar isSafeUrl = function isSafeUrl(exitUrl) {\n  if (!exitUrl) {\n    return false;\n  }\n\n  var safeUrls = [$(\".budget-summary\").attr(\"data-safe-url\").split(\"?\")[0], \"\".concat(location.pathname, \"#\"), \"\".concat(location.href, \"#\"), \"#\"];\n  var safe = false;\n  safeUrls.forEach(function (url) {\n    if (exitUrl.startsWith(url)) {\n      safe = true;\n    }\n  });\n  return safe;\n};\n\nvar allowExitFrom = function allowExitFrom($el) {\n  if (currentAllocationZero()) {\n    return true;\n  } else if ($el.attr(\"target\") === \"_blank\") {\n    return true;\n  } else if ($el.parents(\"#loginModal\").length > 0) {\n    return true;\n  } else if ($el.parents(\"#authorizationModal\").length > 0) {\n    return true;\n  } else if ($el.attr(\"id\") === \"exit-notification-link\") {\n    return true;\n  } else if ($el.parents(\".voting-wrapper\").length > 0) {\n    return true;\n  } else if (isSafeUrl($el.attr(\"href\"))) {\n    return true;\n  }\n\n  return false;\n}; // Don't show browser's default confirmation panel when visit current_path is called in tests.\n\n\nvar testReload = function testReload(initialLocation) {\n  if (navigator && navigator.webdriver && initialLocation === location.href) {\n    return true;\n  }\n\n  return false;\n};\n\n$(function () {\n  var $exitNotification = $(\"#exit-notification\");\n  var $exitLink = $(\"#exit-notification-link\");\n  var defaultExitUrl = $exitLink.attr(\"href\");\n  var defaultExitLinkText = $exitLink.text();\n  var exitLinkText = defaultExitLinkText;\n  var initialLocation = location.href;\n\n  if ($exitNotification.length < 1) {\n    // Do not apply when not inside the voting pipeline\n    return;\n  }\n\n  var openExitNotification = function openExitNotification(url) {\n    var method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    if (method && method !== \"get\") {\n      $exitLink.attr(\"data-method\", method);\n    } else {\n      $exitLink.removeAttr(\"data-method\");\n    }\n\n    $exitLink.attr(\"href\", url);\n    $exitLink.html(exitLinkText);\n    $exitNotification.foundation(\"open\");\n  }; // Handle \"beforeunload\"\n\n\n  window.allowExit = false;\n  $(document).on(\"click\", \"a\", function (event) {\n    exitLinkText = defaultExitLinkText;\n    window.allowExit = false;\n    var $link = $(event.currentTarget);\n\n    if (allowExitFrom($link)) {\n      window.allowExit = true;\n    } else {\n      event.preventDefault();\n      openExitNotification($link.attr(\"href\"), $link.data(\"method\"));\n    }\n  }); // Custom handling for the header sign out so that it won't trigger the\n  // logout form submit and so that it changes the exit link text. This does\n  // not trigger the document link click listener because it has the\n  // data-method attribute to trigger a form submit event.\n\n  $(\".header a.sign-out-link\").on(\"click\", function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var $link = $(event.currentTarget);\n    exitLinkText = $link.text();\n    openExitNotification($link.attr(\"href\"), $link.data(\"method\"));\n  }); // Custom handling for the exit link which needs to change the exit link\n  // text to the default text as this is not handled by the document click\n  // listener.\n\n  $(\"a[data-open='exit-notification']\").on(\"click\", function () {\n    exitLinkText = defaultExitLinkText;\n    openExitNotification(defaultExitUrl);\n  }); // Allow all form submits on the page, including language change and sign\n  // out form (when triggered by the exit link click).\n\n  $(document).on(\"submit\", \"form\", function () {\n    window.allowExit = true;\n  });\n  window.addEventListener(\"beforeunload\", function (event) {\n    var allowExit = window.allowExit;\n    window.allowExit = false;\n\n    if (allowExit || testReload(initialLocation)) {\n      return;\n    }\n\n    event.returnValue = true;\n  });\n});","map":{"version":3,"mappings":"AAAA,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClC,MAAMC,cAAc,GAAGC,CAAC,CAAC,8BAAD,CAAxB;AACA,SAAOC,QAAQ,CAACF,cAAc,CAACG,IAAfH,CAAoB,yBAApBA,CAAD,EAAiD,EAAjD,CAARE,KAAiE,CAAxE;AAFF;;AAKA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAa;AAC7B,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,KAAP;AACD;;AAED,MAAMC,QAAQ,GAAG,CACfL,CAAC,CAAC,iBAAD,CAADA,CAAqBE,IAArBF,CAA0B,eAA1BA,EAA2CM,KAA3CN,CAAiD,GAAjDA,EAAsD,CAAtDA,CADe,YAEZO,QAAQ,CAACC,QAFG,kBAGZD,QAAQ,CAACE,IAHG,QAIf,GAJe,CAAjB;AAOA,MAAIC,IAAI,GAAG,KAAX;AACAL,UAAQ,CAACM,OAATN,CAAiB,UAACO,GAAD,EAAS;AACxB,QAAIR,OAAO,CAACS,UAART,CAAmBQ,GAAnBR,CAAJ,EAA6B;AAC3BM,UAAI,GAAI,IAARA;AACD;AAHH;AAMA,SAAOA,IAAP;AAnBF;;AAsBA,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAS;AAC7B,MAAIjB,qBAAqB,EAAzB,EAA6B;AAC3B,WAAO,IAAP;AADF,SAEO,IAAIiB,GAAG,CAACb,IAAJa,CAAS,QAATA,MAAuB,QAA3B,EAAqC;AAC1C,WAAO,IAAP;AADK,SAEA,IAAIA,GAAG,CAACC,OAAJD,CAAY,aAAZA,EAA2BE,MAA3BF,GAAoC,CAAxC,EAA2C;AAChD,WAAO,IAAP;AADK,SAEA,IAAIA,GAAG,CAACC,OAAJD,CAAY,qBAAZA,EAAmCE,MAAnCF,GAA4C,CAAhD,EAAmD;AACxD,WAAO,IAAP;AADK,SAEA,IAAIA,GAAG,CAACb,IAAJa,CAAS,IAATA,MAAmB,wBAAvB,EAAiD;AACtD,WAAO,IAAP;AADK,SAEA,IAAIA,GAAG,CAACC,OAAJD,CAAY,iBAAZA,EAA+BE,MAA/BF,GAAwC,CAA5C,EAA+C;AACpD,WAAO,IAAP;AADK,SAEA,IAAIZ,SAAS,CAACY,GAAG,CAACb,IAAJa,CAAS,MAATA,CAAD,CAAb,EAAiC;AACtC,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AAjBF,E,CAoBA;;;AACA,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACC,eAAD,EAAqB;AACtC,MAAIC,SAAS,IAAIA,SAAS,CAACC,SAAvBD,IAAoCD,eAAe,KAAKZ,QAAQ,CAACE,IAArE,EAA2E;AACzE,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AALF;;AAQAT,CAAC,CAAC,YAAM;AACN,MAAMsB,iBAAiB,GAAGtB,CAAC,CAAC,oBAAD,CAA3B;AACA,MAAMuB,SAAS,GAAGvB,CAAC,CAAC,yBAAD,CAAnB;AACA,MAAMwB,cAAc,GAAGD,SAAS,CAACrB,IAAVqB,CAAe,MAAfA,CAAvB;AACA,MAAME,mBAAmB,GAAGF,SAAS,CAACG,IAAVH,EAA5B;AACA,MAAII,YAAY,GAAGF,mBAAnB;AACA,MAAMN,eAAe,GAAGZ,QAAQ,CAACE,IAAjC;;AAEA,MAAIa,iBAAiB,CAACL,MAAlBK,GAA2B,CAA/B,EAAkC;AAChC;AACA;AACD;;AAED,MAAMM,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAChB,GAAD,EAAwB;AAAA,QAAlBiB,MAAkB,uEAAT,IAAS;;AACnD,QAAIA,MAAM,IAAIA,MAAM,KAAK,KAAzB,EAAgC;AAC9BN,eAAS,CAACrB,IAAVqB,CAAe,aAAfA,EAA8BM,MAA9BN;AADF,WAEO;AACLA,eAAS,CAACO,UAAVP,CAAqB,aAArBA;AACD;;AAEDA,aAAS,CAACrB,IAAVqB,CAAe,MAAfA,EAAuBX,GAAvBW;AACAA,aAAS,CAACQ,IAAVR,CAAeI,YAAfJ;AACAD,qBAAiB,CAACU,UAAlBV,CAA6B,MAA7BA;AATF,IAbM,CAyBN;;;AACAW,QAAM,CAACC,SAAPD,GAAmB,KAAnBA;AACAjC,GAAC,CAACmC,QAAD,CAADnC,CAAYoC,EAAZpC,CAAe,OAAfA,EAAwB,GAAxBA,EAA6B,UAACqC,KAAD,EAAW;AACtCV,gBAAY,GAAGF,mBAAfE;AACAM,UAAM,CAACC,SAAPD,GAAmB,KAAnBA;AAEA,QAAMK,KAAK,GAAGtC,CAAC,CAACqC,KAAK,CAACE,aAAP,CAAf;;AACA,QAAIzB,aAAa,CAACwB,KAAD,CAAjB,EAA0B;AACxBL,YAAM,CAACC,SAAPD,GAAmB,IAAnBA;AADF,WAEO;AACLI,WAAK,CAACG,cAANH;AACAT,0BAAoB,CAACU,KAAK,CAACpC,IAANoC,CAAW,MAAXA,CAAD,EAAqBA,KAAK,CAACG,IAANH,CAAW,QAAXA,CAArB,CAApBV;AACD;AAVH,KA3BM,CAuCN;AACA;AACA;AACA;;AACA5B,GAAC,CAAC,yBAAD,CAADA,CAA6BoC,EAA7BpC,CAAgC,OAAhCA,EAAyC,UAACqC,KAAD,EAAW;AAClDA,SAAK,CAACG,cAANH;AACAA,SAAK,CAACK,eAANL;AAEA,QAAMC,KAAK,GAAGtC,CAAC,CAACqC,KAAK,CAACE,aAAP,CAAf;AACAZ,gBAAY,GAAGW,KAAK,CAACZ,IAANY,EAAfX;AACAC,wBAAoB,CAACU,KAAK,CAACpC,IAANoC,CAAW,MAAXA,CAAD,EAAqBA,KAAK,CAACG,IAANH,CAAW,QAAXA,CAArB,CAApBV;AANF,KA3CM,CAmDN;AACA;AACA;;AACA5B,GAAC,CAAC,kCAAD,CAADA,CAAsCoC,EAAtCpC,CAAyC,OAAzCA,EAAkD,YAAM;AACtD2B,gBAAY,GAAGF,mBAAfE;AACAC,wBAAoB,CAACJ,cAAD,CAApBI;AAFF,KAtDM,CA0DN;AACA;;AACA5B,GAAC,CAACmC,QAAD,CAADnC,CAAYoC,EAAZpC,CAAe,QAAfA,EAAyB,MAAzBA,EAAiC,YAAM;AACrCiC,UAAM,CAACC,SAAPD,GAAmB,IAAnBA;AADF;AAIAA,QAAM,CAACU,gBAAPV,CAAwB,cAAxBA,EAAwC,UAACI,KAAD,EAAW;AACjD,QAAMH,SAAS,GAAGD,MAAM,CAACC,SAAzB;AACAD,UAAM,CAACC,SAAPD,GAAmB,KAAnBA;;AAEA,QAAIC,SAAS,IAAIhB,UAAU,CAACC,eAAD,CAA3B,EAA8C;AAC5C;AACD;;AAEDkB,SAAK,CAACO,WAANP,GAAoB,IAApBA;AARF;AAhED,EAADrC","names":["currentAllocationZero","$budgetSummary","$","parseInt","attr","isSafeUrl","exitUrl","safeUrls","split","location","pathname","href","safe","forEach","url","startsWith","allowExitFrom","$el","parents","length","testReload","initialLocation","navigator","webdriver","$exitNotification","$exitLink","defaultExitUrl","defaultExitLinkText","text","exitLinkText","openExitNotification","method","removeAttr","html","foundation","window","allowExit","document","on","event","$link","currentTarget","preventDefault","data","stopPropagation","addEventListener","returnValue"],"sources":["/var/lib/gems/2.7.0/gems/decidim-budgets-0.26.0/app/packs/src/decidim/budgets/exit_handler.js"],"sourcesContent":["const currentAllocationZero = () => {\n  const $budgetSummary = $(\".budget-summary__progressbox\");\n  return parseInt($budgetSummary.attr(\"data-current-allocation\"), 10) === 0;\n}\n\nconst isSafeUrl = (exitUrl) => {\n  if (!exitUrl) {\n    return false\n  }\n\n  const safeUrls = [\n    $(\".budget-summary\").attr(\"data-safe-url\").split(\"?\")[0],\n    `${location.pathname}#`,\n    `${location.href}#`,\n    \"#\"\n  ];\n\n  let safe = false;\n  safeUrls.forEach((url) => {\n    if (exitUrl.startsWith(url)) {\n      safe =  true\n    }\n  });\n\n  return safe;\n}\n\nconst allowExitFrom = ($el) => {\n  if (currentAllocationZero()) {\n    return true\n  } else if ($el.attr(\"target\") === \"_blank\") {\n    return true;\n  } else if ($el.parents(\"#loginModal\").length > 0) {\n    return true;\n  } else if ($el.parents(\"#authorizationModal\").length > 0) {\n    return true;\n  } else if ($el.attr(\"id\") === \"exit-notification-link\") {\n    return true;\n  } else if ($el.parents(\".voting-wrapper\").length > 0) {\n    return true;\n  } else if (isSafeUrl($el.attr(\"href\"))) {\n    return true\n  }\n\n  return false;\n}\n\n// Don't show browser's default confirmation panel when visit current_path is called in tests.\nconst testReload = (initialLocation) => {\n  if (navigator && navigator.webdriver && initialLocation === location.href) {\n    return true;\n  }\n\n  return false;\n}\n\n$(() => {\n  const $exitNotification = $(\"#exit-notification\");\n  const $exitLink = $(\"#exit-notification-link\");\n  const defaultExitUrl = $exitLink.attr(\"href\");\n  const defaultExitLinkText = $exitLink.text();\n  let exitLinkText = defaultExitLinkText;\n  const initialLocation = location.href;\n\n  if ($exitNotification.length < 1) {\n    // Do not apply when not inside the voting pipeline\n    return;\n  }\n\n  const openExitNotification = (url, method = null) => {\n    if (method && method !== \"get\") {\n      $exitLink.attr(\"data-method\", method);\n    } else {\n      $exitLink.removeAttr(\"data-method\");\n    }\n\n    $exitLink.attr(\"href\", url);\n    $exitLink.html(exitLinkText);\n    $exitNotification.foundation(\"open\");\n  };\n\n  // Handle \"beforeunload\"\n  window.allowExit = false;\n  $(document).on(\"click\", \"a\", (event) => {\n    exitLinkText = defaultExitLinkText;\n    window.allowExit = false;\n\n    const $link = $(event.currentTarget);\n    if (allowExitFrom($link)) {\n      window.allowExit = true;\n    } else {\n      event.preventDefault();\n      openExitNotification($link.attr(\"href\"), $link.data(\"method\"));\n    }\n  });\n  // Custom handling for the header sign out so that it won't trigger the\n  // logout form submit and so that it changes the exit link text. This does\n  // not trigger the document link click listener because it has the\n  // data-method attribute to trigger a form submit event.\n  $(\".header a.sign-out-link\").on(\"click\", (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const $link = $(event.currentTarget);\n    exitLinkText = $link.text();\n    openExitNotification($link.attr(\"href\"), $link.data(\"method\"));\n  });\n  // Custom handling for the exit link which needs to change the exit link\n  // text to the default text as this is not handled by the document click\n  // listener.\n  $(\"a[data-open='exit-notification']\").on(\"click\", () => {\n    exitLinkText = defaultExitLinkText;\n    openExitNotification(defaultExitUrl);\n  });\n  // Allow all form submits on the page, including language change and sign\n  // out form (when triggered by the exit link click).\n  $(document).on(\"submit\", \"form\", () => {\n    window.allowExit = true;\n  });\n\n  window.addEventListener(\"beforeunload\", (event) => {\n    const allowExit = window.allowExit;\n    window.allowExit = false;\n\n    if (allowExit || testReload(initialLocation)) {\n      return;\n    }\n\n    event.returnValue = true;\n  });\n});\n"]},"metadata":{},"sourceType":"module"}