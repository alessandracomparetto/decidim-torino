{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nvar DEFAULT_MESSAGES = {\n  correctErrors: \"There are errors on the form, please correct them.\"\n};\nvar MESSAGES = DEFAULT_MESSAGES;\n\nvar FormValidator = /*#__PURE__*/function () {\n  function FormValidator(form) {\n    var _this = this;\n\n    _classCallCheck(this, FormValidator);\n\n    this.$form = form;\n    this.$form.on(\"form-error.decidim\", function () {\n      _this.handleError();\n    });\n  }\n\n  _createClass(FormValidator, [{\n    key: \"handleError\",\n    value: function handleError() {\n      this.announceFormError();\n      $(\".is-invalid-input:first\", this.$form).focus();\n    }\n    /**\n     * This announces immediately to the screen reader that there are errors on\n     * the form that need to be fixed. Does not work on all screen readers but\n     * works e.g. in Windows+Firefox+NVDA and macOS+Safari+VoiceOver\n     * combinations.\n     *\n     * @returns {undefined}\n     */\n\n  }, {\n    key: \"announceFormError\",\n    value: function announceFormError() {\n      var $announce = $(\".sr-announce\", this.$form);\n\n      if ($announce.length > 0) {\n        $announce.remove();\n      }\n\n      $announce = $(\"<div />\");\n      $announce.attr(\"class\", \"sr-announce show-for-sr\");\n      $announce.attr(\"aria-live\", \"assertive\");\n      this.$form.prepend($announce);\n      setTimeout(function () {\n        $announce.text(MESSAGES.correctErrors);\n      }, 100);\n    }\n  }], [{\n    key: \"configureMessages\",\n    value: function configureMessages(messages) {\n      MESSAGES = $.extend(DEFAULT_MESSAGES, messages);\n    }\n  }]);\n\n  return FormValidator;\n}();\n\nexport { FormValidator as default };\n$(function () {\n  $(\"form\").each(function (_i, el) {\n    $(el).data(\"form-validator\", new FormValidator($(el)));\n  });\n  $(document).on(\"forminvalid.zf.abide\", function (_ev, form) {\n    form.trigger(\"form-error.decidim\");\n  });\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,gBAAgB,GAAG;AACvBC,eAAa,EAAE;AADQ,CAAzB;AAGA,IAAIC,QAAQ,GAAGF,gBAAf;;IAEqBG,a;AAKnB,yBAAYC,IAAZ,EAAkB;AAAA;;AAAAC;;AAChB,SAAKC,KAAL,GAAaF,IAAb;AAEA,SAAKE,KAAL,CAAWC,EAAX,CAAc,oBAAd,EAAoC,YAAM;AACxCC,WAAI,CAACC,WAAL;AADF;AAGD;;;;WAED,uBAAc;AACZ,WAAKC,iBAAL;AAEAC,OAAC,CAAC,yBAAD,EAA4B,KAAKL,KAAjC,CAADK,CAAyCC,KAAzCD;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,6BAAoB;AAClB,UAAIE,SAAS,GAAGF,CAAC,CAAC,cAAD,EAAiB,KAAKL,KAAtB,CAAjB;;AACA,UAAIO,SAAS,CAACC,MAAVD,GAAmB,CAAvB,EAA0B;AACxBA,iBAAS,CAACE,MAAVF;AACD;;AACDA,eAAS,GAAGF,CAAC,CAAC,SAAD,CAAbE;AACAA,eAAS,CAACG,IAAVH,CAAe,OAAfA,EAAwB,yBAAxBA;AACAA,eAAS,CAACG,IAAVH,CAAe,WAAfA,EAA4B,WAA5BA;AACA,WAAKP,KAAL,CAAWW,OAAX,CAAmBJ,SAAnB;AAEAK,gBAAU,CAAC,YAAM;AACfL,iBAAS,CAACM,IAAVN,CAAeX,QAAQ,CAACD,aAAxBY;AADQ,SAEP,GAFO,CAAVK;AAGD;;;WAvCD,2BAAyBE,QAAzB,EAAmC;AACjClB,cAAQ,GAAGS,CAAC,CAACU,MAAFV,CAASX,gBAATW,EAA2BS,QAA3BT,CAAXT;AACD;;;;;;SAHkBC,a;AA2CrBQ,CAAC,CAAC,YAAM;AACNA,GAAC,CAAC,MAAD,CAADA,CAAUW,IAAVX,CAAe,UAACY,EAAD,EAAKC,EAAL,EAAY;AACzBb,KAAC,CAACa,EAAD,CAADb,CAAMc,IAANd,CAAW,gBAAXA,EAA6B,IAAIR,aAAJ,CAAkBQ,CAAC,CAACa,EAAD,CAAnB,CAA7Bb;AADF;AAGAA,GAAC,CAACe,QAAD,CAADf,CAAYJ,EAAZI,CAAe,sBAAfA,EAAuC,UAASgB,GAAT,EAAcvB,IAAd,EAAoB;AACzDA,QAAI,CAACwB,OAALxB,CAAa,oBAAbA;AADF;AAJD,EAADO","names":["DEFAULT_MESSAGES","correctErrors","MESSAGES","FormValidator","form","_classCallCheck","$form","on","_this","handleError","announceFormError","$","focus","$announce","length","remove","attr","prepend","setTimeout","text","messages","extend","each","_i","el","data","document","_ev","trigger"],"sources":["/var/lib/gems/2.7.0/gems/decidim-core-0.26.0/app/packs/src/decidim/form_validator.js"],"sourcesContent":["const DEFAULT_MESSAGES = {\n  correctErrors: \"There are errors on the form, please correct them.\"\n};\nlet MESSAGES = DEFAULT_MESSAGES;\n\nexport default class FormValidator {\n  static configureMessages(messages) {\n    MESSAGES = $.extend(DEFAULT_MESSAGES, messages);\n  }\n\n  constructor(form) {\n    this.$form = form;\n\n    this.$form.on(\"form-error.decidim\", () => {\n      this.handleError();\n    });\n  }\n\n  handleError() {\n    this.announceFormError();\n\n    $(\".is-invalid-input:first\", this.$form).focus();\n  }\n\n  /**\n   * This announces immediately to the screen reader that there are errors on\n   * the form that need to be fixed. Does not work on all screen readers but\n   * works e.g. in Windows+Firefox+NVDA and macOS+Safari+VoiceOver\n   * combinations.\n   *\n   * @returns {undefined}\n   */\n  announceFormError() {\n    let $announce = $(\".sr-announce\", this.$form);\n    if ($announce.length > 0) {\n      $announce.remove();\n    }\n    $announce = $(\"<div />\");\n    $announce.attr(\"class\", \"sr-announce show-for-sr\");\n    $announce.attr(\"aria-live\", \"assertive\");\n    this.$form.prepend($announce);\n\n    setTimeout(() => {\n      $announce.text(MESSAGES.correctErrors);\n    }, 100);\n  }\n}\n\n$(() => {\n  $(\"form\").each((_i, el) => {\n    $(el).data(\"form-validator\", new FormValidator($(el)));\n  });\n  $(document).on(\"forminvalid.zf.abide\", function(_ev, form) {\n    form.trigger(\"form-error.decidim\");\n  })\n});\n"]},"metadata":{},"sourceType":"module"}