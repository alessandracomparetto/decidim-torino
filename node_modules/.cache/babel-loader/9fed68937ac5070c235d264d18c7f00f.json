{"ast":null,"code":"$(function () {\n  var $form = $(\".form.newsletter_deliver\");\n\n  if ($form.length > 0) {\n    var $sendNewsletterToAllUsers = $form.find(\"#send_newsletter_to_all_users\");\n    var $sendNewsletterToFollowers = $form.find(\"#send_newsletter_to_followers\");\n    var $sendNewsletterToParticipants = $form.find(\"#send_newsletter_to_participants\");\n    var $participatorySpacesForSelect = $form.find(\"#participatory_spaces_for_select\");\n    var checkSelectiveNewsletterFollowers = $sendNewsletterToFollowers.find(\"input[type='checkbox']\").prop(\"checked\");\n    var checkSelectiveNewsletterParticipants = $sendNewsletterToParticipants.find(\"input[type='checkbox']\").prop(\"checked\");\n    $sendNewsletterToAllUsers.on(\"change\", function (event) {\n      var checked = event.target.checked;\n\n      if (checked) {\n        $sendNewsletterToFollowers.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $sendNewsletterToParticipants.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $participatorySpacesForSelect.hide();\n      } else {\n        $sendNewsletterToFollowers.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $sendNewsletterToParticipants.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $participatorySpacesForSelect.show();\n      }\n    });\n    $sendNewsletterToFollowers.on(\"change\", function (event) {\n      var checked = event.target.checked;\n      var selectiveNewsletterParticipants = $sendNewsletterToParticipants.find(\"input[type='checkbox']\").prop(\"checked\");\n\n      if (checked) {\n        $sendNewsletterToAllUsers.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $participatorySpacesForSelect.show();\n      } else if (!selectiveNewsletterParticipants) {\n        $sendNewsletterToAllUsers.find(\"input[type='checkbox']\").prop(\"checked\", true);\n        $participatorySpacesForSelect.hide();\n      }\n    });\n    $sendNewsletterToParticipants.on(\"change\", function (event) {\n      var checked = event.target.checked;\n      var selectiveNewsletterFollowers = $sendNewsletterToFollowers.find(\"input[type='checkbox']\").prop(\"checked\");\n\n      if (checked) {\n        $sendNewsletterToAllUsers.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $participatorySpacesForSelect.show();\n      } else if (!selectiveNewsletterFollowers) {\n        $sendNewsletterToAllUsers.find(\"input[type='checkbox']\").prop(\"checked\", true);\n        $participatorySpacesForSelect.hide();\n      }\n    });\n\n    if (checkSelectiveNewsletterFollowers || checkSelectiveNewsletterParticipants) {\n      $participatorySpacesForSelect.show();\n    } else {\n      $participatorySpacesForSelect.hide();\n    }\n\n    $(\".form .spaces-block-tag\").each(function (_i, blockTag) {\n      var selectTag = $(blockTag).find(\".chosen-select\");\n      selectTag.change(function () {\n        var optionSelected = selectTag.find(\"option:selected\").val();\n\n        if (optionSelected === \"all\") {\n          selectTag.find(\"option\").not(\":first\").prop(\"selected\", true);\n          selectTag.find(\"option[value='all']\").prop(\"selected\", false);\n        } else if (optionSelected === \"\") {\n          selectTag.find(\"option\").not(\":first\").prop(\"selected\", false);\n        }\n      });\n    });\n    $form.on(\"change\", function () {\n      var $data = $form.serializeJSON().newsletter;\n      var $url = $form.data(\"recipients-count-newsletter-path\");\n      var $modal = $(\"#recipients_count_spinner\");\n      $modal.removeClass(\"hide\");\n      $.get($url, {\n        data: $data\n      }, function (recipientsCount) {\n        $(\"#recipients_count\").text(recipientsCount);\n      }).always(function () {\n        $modal.addClass(\"hide\");\n      });\n    });\n  }\n});","map":{"version":3,"mappings":"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","names":["$","$form","length","$sendNewsletterToAllUsers","find","$sendNewsletterToFollowers","$sendNewsletterToParticipants","$participatorySpacesForSelect","checkSelectiveNewsletterFollowers","prop","checkSelectiveNewsletterParticipants","on","event","checked","target","hide","show","selectiveNewsletterParticipants","selectiveNewsletterFollowers","each","_i","blockTag","selectTag","change","optionSelected","val","not","$data","serializeJSON","newsletter","$url","data","$modal","removeClass","get","recipientsCount","text","always","addClass"],"sources":["/var/lib/gems/2.7.0/gems/decidim-admin-0.26.0/app/packs/src/decidim/admin/newsletters.js"],"sourcesContent":["$(() => {\n  const $form = $(\".form.newsletter_deliver\");\n\n  if ($form.length > 0) {\n    const $sendNewsletterToAllUsers = $form.find(\"#send_newsletter_to_all_users\");\n    const $sendNewsletterToFollowers = $form.find(\"#send_newsletter_to_followers\");\n    const $sendNewsletterToParticipants = $form.find(\"#send_newsletter_to_participants\");\n    const $participatorySpacesForSelect = $form.find(\"#participatory_spaces_for_select\");\n\n    const checkSelectiveNewsletterFollowers = $sendNewsletterToFollowers.find(\"input[type='checkbox']\").prop(\"checked\");\n    const checkSelectiveNewsletterParticipants = $sendNewsletterToParticipants.find(\"input[type='checkbox']\").prop(\"checked\");\n\n    $sendNewsletterToAllUsers.on(\"change\", (event) => {\n      const checked = event.target.checked;\n      if (checked) {\n        $sendNewsletterToFollowers.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $sendNewsletterToParticipants.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $participatorySpacesForSelect.hide();\n      } else {\n        $sendNewsletterToFollowers.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $sendNewsletterToParticipants.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $participatorySpacesForSelect.show();\n      }\n    })\n\n    $sendNewsletterToFollowers.on(\"change\", (event) => {\n      const checked = event.target.checked;\n      const selectiveNewsletterParticipants = $sendNewsletterToParticipants.find(\"input[type='checkbox']\").prop(\"checked\");\n\n      if (checked) {\n        $sendNewsletterToAllUsers.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $participatorySpacesForSelect.show();\n      } else if (!selectiveNewsletterParticipants) {\n        $sendNewsletterToAllUsers.find(\"input[type='checkbox']\").prop(\"checked\", true);\n        $participatorySpacesForSelect.hide();\n      }\n    })\n\n    $sendNewsletterToParticipants.on(\"change\", (event) => {\n      const checked = event.target.checked;\n      const selectiveNewsletterFollowers = $sendNewsletterToFollowers.find(\"input[type='checkbox']\").prop(\"checked\");\n      if (checked) {\n        $sendNewsletterToAllUsers.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $participatorySpacesForSelect.show();\n      } else if (!selectiveNewsletterFollowers) {\n        $sendNewsletterToAllUsers.find(\"input[type='checkbox']\").prop(\"checked\", true);\n        $participatorySpacesForSelect.hide();\n      }\n    })\n\n    if (checkSelectiveNewsletterFollowers || checkSelectiveNewsletterParticipants) {\n      $participatorySpacesForSelect.show();\n    } else {\n      $participatorySpacesForSelect.hide();\n    }\n\n    $(\".form .spaces-block-tag\").each(function(_i, blockTag) {\n      const selectTag = $(blockTag).find(\".chosen-select\")\n      selectTag.change(function() {\n        let optionSelected = selectTag.find(\"option:selected\").val()\n        if (optionSelected === \"all\") {\n          selectTag.find(\"option\").not(\":first\").prop(\"selected\", true);\n          selectTag.find(\"option[value='all']\").prop(\"selected\", false);\n        } else if (optionSelected === \"\") {\n          selectTag.find(\"option\").not(\":first\").prop(\"selected\", false);\n        }\n      });\n    })\n\n    $form.on(\"change\", function() {\n      let $data = $form.serializeJSON().newsletter;\n      let $url = $form.data(\"recipients-count-newsletter-path\");\n      const $modal = $(\"#recipients_count_spinner\");\n      $modal.removeClass(\"hide\");\n      $.get($url, {data: $data}, function(recipientsCount) {\n        $(\"#recipients_count\").text(recipientsCount);\n      }).always(function() {\n        $modal.addClass(\"hide\");\n      });\n    })\n  }\n});\n"]},"metadata":{},"sourceType":"module"}