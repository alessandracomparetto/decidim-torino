{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* eslint-disable require-jsdoc, no-console */\n\n\nimport areachart from \"src/decidim/vizzs/areachart\";\n$(function () {\n  var metricsData = {};\n  var metricsContainer = {};\n  var metricsParams = {};\n\n  var query = function query() {\n    var metricsQuery = \"metrics(names: \".concat(metricsParams.names, \", space_type: \\\"\").concat(metricsParams.spaceType, \"\\\", space_id: \").concat(metricsParams.spaceId, \") { name history { key value } }\");\n    return {\n      query: \"{ \".concat(metricsQuery, \" }\")\n    };\n  };\n\n  var parameterize = function parameterize(metrics) {\n    metricsParams.names = JSON.stringify(metrics || []);\n    metricsParams.spaceType = $(\"#metrics #metrics-space_type\").val() || null;\n    metricsParams.spaceId = $(\"#metrics #metrics-space_id\").val() || null;\n  };\n\n  var fetch = function fetch(metrics) {\n    return $.post(\"/api\", query(metrics));\n  };\n\n  var downloadMetricData = function downloadMetricData(event) {\n    event.preventDefault();\n    var metricName = $(event.target).parents(\".metric-downloader\").data(\"metric\");\n    var csvContent = \"data:text/csv;charset=utf-8,\";\n    csvContent += \"key,value\\r\\n\";\n    metricsData[metricName].forEach(function (metricData) {\n      csvContent += \"\".concat(metricData.key, \",\").concat(metricData.value, \"\\r\\n\");\n    }); // Required for FF\n\n    var link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodeURI(csvContent));\n    link.setAttribute(\"download\", \"\".concat(metricName, \"_metric_data.csv\"));\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  $(\".metric-chart:visible\").each(function (_index, container) {\n    metricsContainer[$(container).data(\"metric\")] = container;\n  });\n  $(\".metric-downloader\").each(function (_index, container) {\n    container.onclick = downloadMetricData;\n  });\n\n  if (!$.isEmptyObject(metricsContainer)) {\n    parameterize(Object.keys(metricsContainer));\n    fetch().then(function (response) {\n      if (response.data) {\n        $.each(response.data.metrics, function (_index, metricData) {\n          var container = metricsContainer[metricData.name];\n\n          if (metricData.history.length === 0) {\n            $(container).remove();\n            return;\n          }\n\n          var info = $(container).data(\"info\");\n          metricsData[metricData.name] = $.extend(true, [], metricData.history);\n          areachart(_objectSpread({\n            container: \"#\".concat(container.id),\n            data: metricData.history,\n            title: info.title,\n            objectName: info.object\n          }, $(container).data()));\n        });\n      } else if (response.errors) {\n        console.log(\"Something wrong happened when fetching metrics:\");\n        $.each(response.errors, function (_index, error) {\n          console.log(error.message);\n        });\n        $(\"#metrics\").remove();\n      }\n    }).fail(function (err) {\n      console.log(\"Something wrong happened when fetching metrics: \".concat(err.statusText));\n      $(\"#metrics\").remove();\n    });\n  }\n});","map":{"version":3,"mappings":"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","names":["areachart","$","metricsData","metricsContainer","metricsParams","query","metricsQuery","names","spaceType","spaceId","parameterize","metrics","JSON","stringify","val","fetch","post","downloadMetricData","event","preventDefault","metricName","target","parents","data","csvContent","forEach","metricData","key","value","link","document","createElement","setAttribute","encodeURI","body","appendChild","click","removeChild","each","_index","container","onclick","isEmptyObject","Object","keys","then","response","name","history","length","remove","info","extend","id","title","objectName","object","errors","console","log","error","message","fail","err","statusText"],"sources":["/var/lib/gems/2.7.0/gems/decidim-core-0.26.0/app/packs/src/decidim/vizzs/metrics.js"],"sourcesContent":["/* eslint-disable require-jsdoc, no-console */\n\nimport areachart from \"src/decidim/vizzs/areachart\"\n\n$(() => {\n\n  const metricsData = {};\n  const metricsContainer = {};\n  const metricsParams = {};\n\n  const query = () => {\n    let metricsQuery = `metrics(names: ${metricsParams.names}, space_type: \"${metricsParams.spaceType}\", space_id: ${metricsParams.spaceId}) { name history { key value } }`;\n    return {query: `{ ${metricsQuery} }`};\n  }\n\n  const parameterize = (metrics) => {\n    metricsParams.names = JSON.stringify(metrics || []);\n    metricsParams.spaceType = $(\"#metrics #metrics-space_type\").val() || null;\n    metricsParams.spaceId = $(\"#metrics #metrics-space_id\").val() || null;\n  }\n\n  const fetch = (metrics) => $.post(\"/api\", query(metrics));\n\n  const downloadMetricData = (event) => {\n    event.preventDefault();\n    let metricName = $(event.target).parents(\".metric-downloader\").data(\"metric\");\n    let csvContent = \"data:text/csv;charset=utf-8,\";\n\n    csvContent += \"key,value\\r\\n\";\n    metricsData[metricName].forEach((metricData)  => {\n      csvContent += `${metricData.key},${metricData.value}\\r\\n`;\n    });\n\n    // Required for FF\n    let link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodeURI(csvContent));\n    link.setAttribute(\"download\", `${metricName}_metric_data.csv`);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  $(\".metric-chart:visible\").each((_index, container) => {\n    metricsContainer[$(container).data(\"metric\")] = container;\n  });\n  $(\".metric-downloader\").each((_index, container) => {\n    container.onclick = downloadMetricData;\n  });\n\n  if (!$.isEmptyObject(metricsContainer)) {\n    parameterize(Object.keys(metricsContainer))\n    fetch().then((response) => {\n      if (response.data) {\n        $.each(response.data.metrics, (_index, metricData) => {\n          let container = metricsContainer[metricData.name];\n          if (metricData.history.length === 0) {\n            $(container).remove();\n            return;\n          }\n          let info = $(container).data(\"info\");\n          metricsData[metricData.name] = $.extend(true, [], metricData.history);\n          areachart({\n            container: `#${container.id}`,\n            data: metricData.history,\n            title: info.title,\n            objectName: info.object,\n            ...$(container).data()\n          });\n        });\n      } else if (response.errors) {\n        console.log(\"Something wrong happened when fetching metrics:\");\n        $.each(response.errors, (_index, error) => {\n          console.log(error.message);\n        });\n        $(\"#metrics\").remove();\n      }\n    }).fail((err) => {\n      console.log(`Something wrong happened when fetching metrics: ${err.statusText}`);\n      $(\"#metrics\").remove();\n    });\n  }\n});\n"]},"metadata":{},"sourceType":"module"}