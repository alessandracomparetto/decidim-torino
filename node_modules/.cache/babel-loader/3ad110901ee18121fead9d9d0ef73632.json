{"ast":null,"code":"import moment from \"moment\";\nimport Foundation from \"foundation-sites\";\n$(function () {\n  var sessionTimeOutEnabled = true;\n  var $timeoutModal = $(\"#timeoutModal\");\n  var timeoutInSeconds = parseInt($timeoutModal.data(\"session-timeout\"), 10);\n  var secondsUntilTimeoutPath = $timeoutModal.data(\"seconds-until-timeout-path\");\n  var heartbeatPath = $timeoutModal.data(\"heartbeat-path\");\n  var interval = parseInt($timeoutModal.data(\"session-timeout-interval\"), 10);\n  var endsAt = moment().add(timeoutInSeconds, \"seconds\");\n  var lastAction = moment();\n  var popup = new Foundation.Reveal($timeoutModal);\n  var $continueSessionButton = $(\"#continueSession\");\n  var lastActivityCheck = moment(); // 5 * 60 seconds = 5 Minutes\n\n  var activityCheckInterval = 5 * 60; // Ajax request is made at timeout_modal.html.erb\n\n  $continueSessionButton.on(\"click\", function () {\n    $(\"#timeoutModal\").foundation(\"close\"); // In admin panel we have to hide all overlays\n\n    $(\".reveal-overlay\").css(\"display\", \"none\");\n    lastActivityCheck = moment();\n  });\n\n  if (isNaN(interval)) {\n    return;\n  }\n\n  if (!timeoutInSeconds) {\n    return;\n  }\n\n  var disableSessionTimeout = function disableSessionTimeout() {\n    sessionTimeOutEnabled = false;\n  };\n\n  var enableSessionTimeout = function enableSessionTimeout() {\n    sessionTimeOutEnabled = true;\n  };\n\n  var setTimer = function setTimer(secondsUntilExpiration) {\n    if (!secondsUntilExpiration) {\n      return;\n    }\n\n    endsAt = moment().add(secondsUntilExpiration, \"seconds\");\n  };\n\n  var sessionTimeLeft = function sessionTimeLeft() {\n    return $.ajax({\n      method: \"GET\",\n      url: secondsUntilTimeoutPath,\n      contentType: \"application/json\",\n      headers: {\n        \"X-CSRF-Token\": $(\"meta[name=csrf-token]\").attr(\"content\")\n      }\n    });\n  };\n\n  var heartbeat = function heartbeat() {\n    return $.ajax({\n      method: \"POST\",\n      url: heartbeatPath,\n      contentType: \"application/javascript\"\n    });\n  };\n\n  var userBeenActiveSince = function userBeenActiveSince(seconds) {\n    return (moment() - lastAction) / 1000 < seconds;\n  };\n\n  var exitInterval = setInterval(function () {\n    var timeSinceLastActivityCheckInSeconds = Math.round((moment() - lastActivityCheck) / 1000);\n    var popupOpen = $(\"#timeoutModal\").parent().css(\"display\") === \"block\";\n\n    if (!popupOpen && timeSinceLastActivityCheckInSeconds >= activityCheckInterval) {\n      lastActivityCheck = moment();\n\n      if (userBeenActiveSince(activityCheckInterval)) {\n        heartbeat();\n        return;\n      }\n    }\n\n    var timeRemaining = Math.round((endsAt - moment()) / 1000);\n\n    if (timeRemaining > 150) {\n      return;\n    }\n\n    sessionTimeLeft().then(function (result) {\n      var secondsUntilSessionExpires = result.seconds_remaining;\n      setTimer(secondsUntilSessionExpires);\n\n      if (!sessionTimeOutEnabled) {\n        heartbeat();\n      } else if (secondsUntilSessionExpires <= 90) {\n        $timeoutModal.find(\"#reveal-hidden-sign-out\")[0].click();\n      } else if (secondsUntilSessionExpires <= 150) {\n        popup.open();\n      }\n    });\n  }, interval);\n  $(document).mousemove(function () {\n    lastAction = moment();\n  });\n  $(document).scroll(function () {\n    lastAction = moment();\n  });\n  $(document).keypress(function () {\n    lastAction = moment();\n  }); // Devise restarts its own timer on ajax requests,\n  // so here we restart our.\n\n  $(document).on(\"ajax:complete\", function () {\n    setTimer(timeoutInSeconds);\n  });\n  $(document).ajaxComplete(function (_event, _xhr, settings) {\n    if (settings && settings.url === secondsUntilTimeoutPath) {\n      return;\n    }\n\n    setTimer(timeoutInSeconds);\n  });\n  window.addEventListener(\"beforeunload\", function () {\n    clearInterval(exitInterval);\n    return;\n  });\n  window.Decidim.enableSessionTimeout = enableSessionTimeout;\n  window.Decidim.disableSessionTimeout = disableSessionTimeout;\n});","map":{"version":3,"mappings":"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","names":["moment","Foundation","$","sessionTimeOutEnabled","$timeoutModal","timeoutInSeconds","parseInt","data","secondsUntilTimeoutPath","heartbeatPath","interval","endsAt","add","lastAction","popup","Reveal","$continueSessionButton","lastActivityCheck","activityCheckInterval","on","foundation","css","isNaN","disableSessionTimeout","enableSessionTimeout","setTimer","secondsUntilExpiration","sessionTimeLeft","ajax","method","url","contentType","headers","attr","heartbeat","userBeenActiveSince","seconds","exitInterval","setInterval","timeSinceLastActivityCheckInSeconds","Math","round","popupOpen","parent","timeRemaining","then","result","secondsUntilSessionExpires","seconds_remaining","find","click","open","document","mousemove","scroll","keypress","ajaxComplete","_event","_xhr","settings","window","addEventListener","clearInterval","Decidim"],"sources":["/var/lib/gems/2.7.0/gems/decidim-core-0.26.0/app/packs/src/decidim/session_timeouter.js"],"sourcesContent":["import moment from \"moment\"\nimport Foundation from \"foundation-sites\"\n\n$(() => {\n  let sessionTimeOutEnabled = true;\n  const $timeoutModal = $(\"#timeoutModal\");\n  const timeoutInSeconds = parseInt($timeoutModal.data(\"session-timeout\"), 10);\n  const secondsUntilTimeoutPath = $timeoutModal.data(\"seconds-until-timeout-path\");\n  const heartbeatPath = $timeoutModal.data(\"heartbeat-path\");\n  const interval = parseInt($timeoutModal.data(\"session-timeout-interval\"), 10);\n  let endsAt = moment().add(timeoutInSeconds, \"seconds\");\n  let lastAction = moment();\n  const popup = new Foundation.Reveal($timeoutModal);\n  const $continueSessionButton = $(\"#continueSession\");\n  let lastActivityCheck = moment();\n  // 5 * 60 seconds = 5 Minutes\n  const activityCheckInterval = 5 * 60;\n\n  // Ajax request is made at timeout_modal.html.erb\n  $continueSessionButton.on(\"click\", () => {\n    $(\"#timeoutModal\").foundation(\"close\");\n    // In admin panel we have to hide all overlays\n    $(\".reveal-overlay\").css(\"display\", \"none\");\n    lastActivityCheck = moment();\n  })\n\n  if (isNaN(interval)) {\n    return;\n  }\n  if (!timeoutInSeconds) {\n    return;\n  }\n\n  const disableSessionTimeout = () => {\n    sessionTimeOutEnabled = false;\n  }\n\n  const enableSessionTimeout = () => {\n    sessionTimeOutEnabled = true;\n  }\n\n  const setTimer = (secondsUntilExpiration) => {\n    if (!secondsUntilExpiration) {\n      return;\n    }\n    endsAt = moment().add(secondsUntilExpiration, \"seconds\");\n  }\n\n  const sessionTimeLeft = () => {\n    return $.ajax({\n      method: \"GET\",\n      url: secondsUntilTimeoutPath,\n      contentType: \"application/json\",\n      headers: {\n        \"X-CSRF-Token\": $(\"meta[name=csrf-token]\").attr(\"content\")\n      }\n    });\n  }\n\n  const heartbeat = () => {\n    return $.ajax({\n      method: \"POST\",\n      url: heartbeatPath,\n      contentType: \"application/javascript\"\n    });\n  }\n\n  const userBeenActiveSince = (seconds) => {\n    return (moment() - lastAction) / 1000 < seconds;\n  }\n\n  const exitInterval = setInterval(() => {\n    const timeSinceLastActivityCheckInSeconds = Math.round((moment() - lastActivityCheck) / 1000);\n\n    const popupOpen = $(\"#timeoutModal\").parent().css(\"display\") === \"block\";\n    if (!popupOpen && timeSinceLastActivityCheckInSeconds >= activityCheckInterval) {\n      lastActivityCheck = moment();\n      if (userBeenActiveSince(activityCheckInterval)) {\n        heartbeat();\n        return;\n      }\n    }\n\n    const timeRemaining = Math.round((endsAt - moment()) / 1000);\n    if (timeRemaining > 150) {\n      return;\n    }\n\n    sessionTimeLeft().then((result) => {\n      const secondsUntilSessionExpires = result.seconds_remaining;\n      setTimer(secondsUntilSessionExpires);\n\n      if (!sessionTimeOutEnabled) {\n        heartbeat();\n      } else if (secondsUntilSessionExpires <= 90) {\n        $timeoutModal.find(\"#reveal-hidden-sign-out\")[0].click();\n      } else if (secondsUntilSessionExpires <= 150) {\n        popup.open();\n      }\n    });\n  }, interval);\n\n  $(document).mousemove(() => {\n    lastAction = moment();\n  })\n  $(document).scroll(() => {\n    lastAction = moment();\n  })\n  $(document).keypress(() => {\n    lastAction = moment();\n  })\n\n  // Devise restarts its own timer on ajax requests,\n  // so here we restart our.\n  $(document).on(\"ajax:complete\", () => {\n    setTimer(timeoutInSeconds);\n  });\n\n  $(document).ajaxComplete((_event, _xhr, settings) => {\n    if (settings && settings.url === secondsUntilTimeoutPath) {\n      return;\n    }\n    setTimer(timeoutInSeconds);\n  });\n\n  window.addEventListener(\"beforeunload\", () => {\n    clearInterval(exitInterval);\n    return;\n  });\n\n  window.Decidim.enableSessionTimeout = enableSessionTimeout\n  window.Decidim.disableSessionTimeout = disableSessionTimeout\n});\n"]},"metadata":{},"sourceType":"module"}