{"ast":null,"code":"import Tribute from \"src/decidim/vendor/tribute\";\n$(function () {\n  $(\"[data-decidim-geocoding]\").each(function (_i, el) {\n    var $input = $(el);\n    var $fieldContainer = $input.parent();\n    $fieldContainer.addClass(\"has-tribute\");\n    var tribute = new Tribute({\n      autocompleteMode: true,\n      // autocompleteSeparator: / \\+ /, // See below, requires Tribute update\n      allowSpaces: true,\n      positionMenu: false,\n      replaceTextSuffix: \"\",\n      menuContainer: $fieldContainer.get(0),\n      noMatchTemplate: null,\n      values: function values(text, cb) {\n        $input.trigger(\"geocoder-suggest.decidim\", [text, cb]);\n      }\n    }); // Port https://github.com/zurb/tribute/pull/406\n    // This changes the autocomplete separator from space to \" + \" so that\n    // we can do searches such as \"streetname 4\" including a space. Otherwise\n    // this would do two separate searches for \"streetname\" and \"4\".\n\n    tribute.range.getLastWordInText = function (text) {\n      var _final = text.replace(/\\u00A0/g, \" \");\n\n      var wordsArray = _final.split(/ \\+ /);\n\n      var worldsCount = wordsArray.length - 1;\n      return wordsArray[worldsCount].trim();\n    };\n\n    tribute.attach($input.get(0));\n    $input.on(\"tribute-replaced\", function (ev) {\n      var selectedItem = ev.detail.item.original;\n      $input.trigger(\"geocoder-suggest-select.decidim\", [selectedItem]); // Not all geocoding autocomplete APIs include the coordinates in the\n      // suggestions response. Therefore, some APIs may require additional\n      // query for the coordinates, which should trigger this event for the\n      // input element.\n\n      if (selectedItem.coordinates) {\n        $input.trigger(\"geocoder-suggest-coordinates.decidim\", [selectedItem.coordinates]);\n      }\n    });\n    $input.data(\"geocoder-tribute\", tribute);\n  });\n});","map":{"version":3,"mappings":"AAAA,OAAOA,OAAP,MAAoB,4BAApB;AAEAC,CAAC,CAAC,YAAM;AACNA,GAAC,CAAC,0BAAD,CAADA,CAA8BC,IAA9BD,CAAmC,UAACE,EAAD,EAAKC,EAAL,EAAY;AAC7C,QAAMC,MAAM,GAAGJ,CAAC,CAACG,EAAD,CAAhB;AACA,QAAME,eAAe,GAAGD,MAAM,CAACE,MAAPF,EAAxB;AAEAC,mBAAe,CAACE,QAAhBF,CAAyB,aAAzBA;AAEA,QAAMG,OAAO,GAAG,IAAIT,OAAJ,CACd;AACEU,sBAAgB,EAAE,IADpB;AAEE;AACAC,iBAAW,EAAE,IAHf;AAIEC,kBAAY,EAAE,KAJhB;AAKEC,uBAAiB,EAAE,EALrB;AAMEC,mBAAa,EAAER,eAAe,CAACS,GAAhBT,CAAoB,CAApBA,CANjB;AAOEU,qBAAe,EAAE,IAPnB;AAQEC,YAAM,EAAE,gBAACC,IAAD,EAAOC,EAAP,EAAc;AACpBd,cAAM,CAACe,OAAPf,CAAe,0BAAfA,EAA2C,CAACa,IAAD,EAAOC,EAAP,CAA3Cd;AACD;AAVH,KADc,CAAhB,CAN6C,CAqB7C;AACA;AACA;AACA;;AACAI,WAAO,CAACY,KAARZ,CAAca,iBAAdb,GAAkC,UAACS,IAAD,EAAU;AAC1C,UAAMK,MAAK,GAAGL,IAAI,CAACM,OAALN,CAAa,SAAbA,EAAwB,GAAxBA,CAAd;;AACA,UAAMO,UAAU,GAAGF,MAAK,CAACG,KAANH,CAAY,MAAZA,CAAnB;;AACA,UAAMI,WAAW,GAAGF,UAAU,CAACG,MAAXH,GAAoB,CAAxC;AAEA,aAAOA,UAAU,CAACE,WAAD,CAAVF,CAAwBI,IAAxBJ,EAAP;AALF;;AAQAhB,WAAO,CAACqB,MAARrB,CAAeJ,MAAM,CAACU,GAAPV,CAAW,CAAXA,CAAfI;AAEAJ,UAAM,CAAC0B,EAAP1B,CAAU,kBAAVA,EAA8B,UAAS2B,EAAT,EAAa;AACzC,UAAMC,YAAY,GAAGD,EAAE,CAACE,MAAHF,CAAUG,IAAVH,CAAeI,QAApC;AACA/B,YAAM,CAACe,OAAPf,CAAe,iCAAfA,EAAkD,CAAC4B,YAAD,CAAlD5B,EAFyC,CAIzC;AACA;AACA;AACA;;AACA,UAAI4B,YAAY,CAACI,WAAjB,EAA8B;AAC5BhC,cAAM,CAACe,OAAPf,CAAe,sCAAfA,EAAuD,CAAC4B,YAAY,CAACI,WAAd,CAAvDhC;AACD;AAVH;AAaAA,UAAM,CAACiC,IAAPjC,CAAY,kBAAZA,EAAgCI,OAAhCJ;AAhDF;AADD,EAADJ","names":["Tribute","$","each","_i","el","$input","$fieldContainer","parent","addClass","tribute","autocompleteMode","allowSpaces","positionMenu","replaceTextSuffix","menuContainer","get","noMatchTemplate","values","text","cb","trigger","range","getLastWordInText","final","replace","wordsArray","split","worldsCount","length","trim","attach","on","ev","selectedItem","detail","item","original","coordinates","data"],"sources":["/var/lib/gems/2.7.0/gems/decidim-core-0.26.0/app/packs/src/decidim/geocoding.js"],"sourcesContent":["import Tribute from \"src/decidim/vendor/tribute\"\n\n$(() => {\n  $(\"[data-decidim-geocoding]\").each((_i, el) => {\n    const $input = $(el);\n    const $fieldContainer = $input.parent();\n\n    $fieldContainer.addClass(\"has-tribute\");\n\n    const tribute = new Tribute(\n      {\n        autocompleteMode: true,\n        // autocompleteSeparator: / \\+ /, // See below, requires Tribute update\n        allowSpaces: true,\n        positionMenu: false,\n        replaceTextSuffix: \"\",\n        menuContainer: $fieldContainer.get(0),\n        noMatchTemplate: null,\n        values: (text, cb) => {\n          $input.trigger(\"geocoder-suggest.decidim\", [text, cb]);\n        }\n      }\n    );\n\n    // Port https://github.com/zurb/tribute/pull/406\n    // This changes the autocomplete separator from space to \" + \" so that\n    // we can do searches such as \"streetname 4\" including a space. Otherwise\n    // this would do two separate searches for \"streetname\" and \"4\".\n    tribute.range.getLastWordInText = (text) => {\n      const final = text.replace(/\\u00A0/g, \" \");\n      const wordsArray = final.split(/ \\+ /);\n      const worldsCount = wordsArray.length - 1;\n\n      return wordsArray[worldsCount].trim();\n    };\n\n    tribute.attach($input.get(0));\n\n    $input.on(\"tribute-replaced\", function(ev) {\n      const selectedItem = ev.detail.item.original;\n      $input.trigger(\"geocoder-suggest-select.decidim\", [selectedItem]);\n\n      // Not all geocoding autocomplete APIs include the coordinates in the\n      // suggestions response. Therefore, some APIs may require additional\n      // query for the coordinates, which should trigger this event for the\n      // input element.\n      if (selectedItem.coordinates) {\n        $input.trigger(\"geocoder-suggest-coordinates.decidim\", [selectedItem.coordinates]);\n      }\n    });\n\n    $input.data(\"geocoder-tribute\", tribute);\n  });\n});\n"]},"metadata":{},"sourceType":"module"}