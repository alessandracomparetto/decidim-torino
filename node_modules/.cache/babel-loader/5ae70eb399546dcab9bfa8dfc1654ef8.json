{"ast":null,"code":"/**\n * Get coordinate input name from a given $input\n * @param {string} coordinate - Allows to find 'latitude' or 'longitude' field.\n * @param {jQuery} $input - Address input field\n * @param {Object} options (optional) - Extra options\n * @returns {string} - Returns input name\n */\nexport default function getCoordinateInputName(coordinate, $input, options) {\n  var key = \"\".concat(coordinate, \"Name\");\n\n  if (options[key]) {\n    return options[key];\n  }\n\n  var inputName = $input.attr(\"name\");\n  var subNameMatch = /\\[[^\\]]+\\]$/;\n\n  if (inputName.match(subNameMatch)) {\n    return inputName.replace(subNameMatch, \"[\".concat(coordinate, \"]\"));\n  }\n\n  return coordinate;\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,sBAAT,CAAgCC,UAAhC,EAA4CC,MAA5C,EAAoDC,OAApD,EAA6D;AAC1E,MAAMC,GAAG,aAAMH,UAAN,SAAT;;AACA,MAAIE,OAAO,CAACC,GAAD,CAAX,EAAkB;AAChB,WAAOD,OAAO,CAACC,GAAD,CAAd;AACD;;AAED,MAAMC,SAAS,GAAGH,MAAM,CAACI,IAAPJ,CAAY,MAAZA,CAAlB;AACA,MAAMK,YAAY,GAAG,aAArB;;AACA,MAAIF,SAAS,CAACG,KAAVH,CAAgBE,YAAhBF,CAAJ,EAAmC;AACjC,WAAOA,SAAS,CAACI,OAAVJ,CAAkBE,YAAlBF,aAAoCJ,UAApC,OAAP;AACD;;AAED,SAAOA,UAAP;AACD","names":["getCoordinateInputName","coordinate","$input","options","key","inputName","attr","subNameMatch","match","replace"],"sources":["/var/lib/gems/2.7.0/gems/decidim-core-0.26.0/app/packs/src/decidim/geocoding/coordinate_input.js"],"sourcesContent":["/**\n * Get coordinate input name from a given $input\n * @param {string} coordinate - Allows to find 'latitude' or 'longitude' field.\n * @param {jQuery} $input - Address input field\n * @param {Object} options (optional) - Extra options\n * @returns {string} - Returns input name\n */\nexport default function getCoordinateInputName(coordinate, $input, options) {\n  const key = `${coordinate}Name`;\n  if (options[key]) {\n    return options[key];\n  }\n\n  const inputName = $input.attr(\"name\");\n  const subNameMatch = /\\[[^\\]]+\\]$/;\n  if (inputName.match(subNameMatch)) {\n    return inputName.replace(subNameMatch, `[${coordinate}]`);\n  }\n\n  return coordinate;\n}\n"]},"metadata":{},"sourceType":"module"}