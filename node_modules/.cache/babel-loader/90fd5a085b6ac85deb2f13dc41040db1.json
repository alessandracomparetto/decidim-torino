{"ast":null,"code":"/* eslint-disable camelcase */\nvar controlSelector = function controlSelector(source, prefix, currentValueKey) {\n  if (source.length) {\n    var currentValue = source.data(currentValueKey),\n        searchUrl = source.data(\"\".concat(prefix, \"-search-url\")),\n        targetElement = $(\"#\".concat(source.data(\"\".concat(prefix, \"-selector\"))));\n\n    if (targetElement.length) {\n      var refresh = function refresh() {\n        $.ajax({\n          url: searchUrl,\n          cache: false,\n          dataType: \"html\",\n          data: {\n            type_id: source.val(),\n            selected: currentValue\n          },\n          success: function success(data) {\n            targetElement.html(data);\n          }\n        });\n      };\n\n      source.change(refresh);\n      refresh();\n    }\n  }\n};\n\n$(function () {\n  var typeSelector = $(\"[data-scope-selector]\");\n  controlSelector(typeSelector, \"scope\", \"scope-id\");\n  controlSelector(typeSelector, \"signature-types\", \"signature-type\");\n});","map":{"version":3,"mappings":"AAAA;AACA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAASC,MAAT,EAAiBC,MAAjB,EAAyBC,eAAzB,EAA0C;AAChE,MAAIF,MAAM,CAACG,MAAX,EAAmB;AACjB,QAAIC,YAAY,GAAGJ,MAAM,CAACK,IAAPL,CAAYE,eAAZF,CAAnB;AAAA,QACIM,SAAS,GAAGN,MAAM,CAACK,IAAPL,WAAeC,MAAf,iBADhB;AAAA,QAEIM,aAAa,GAAGC,CAAC,YAAKR,MAAM,CAACK,IAAPL,WAAeC,MAAf,eAAL,EAFrB;;AAIA,QAAIM,aAAa,CAACJ,MAAlB,EAA0B;AACxB,UAAIM,OAAO,GAAG,SAAVA,OAAU,GAAY;AACxBD,SAAC,CAACE,IAAFF,CAAO;AACLG,aAAG,EAAEL,SADA;AAELM,eAAK,EAAE,KAFF;AAGLC,kBAAQ,EAAE,MAHL;AAILR,cAAI,EAAE;AACJS,mBAAO,EAAEd,MAAM,CAACe,GAAPf,EADL;AAEJgB,oBAAQ,EAAEZ;AAFN,WAJD;AAQLa,iBAAO,EAAE,iBAAUZ,IAAV,EAAgB;AACvBE,yBAAa,CAACW,IAAdX,CAAmBF,IAAnBE;AACD;AAVI,SAAPC;AADF;;AAeAR,YAAM,CAACmB,MAAPnB,CAAcS,OAAdT;AACAS,aAAO;AACR;AACF;AAzBH;;AA4BAD,CAAC,CAAC,YAAM;AACN,MAAIY,YAAY,GAAGZ,CAAC,CAAC,uBAAD,CAApB;AACAT,iBAAe,CAACqB,YAAD,EAAe,OAAf,EAAwB,UAAxB,CAAfrB;AACAA,iBAAe,CAACqB,YAAD,EAAe,iBAAf,EAAkC,gBAAlC,CAAfrB;AAHD,EAADS","names":["controlSelector","source","prefix","currentValueKey","length","currentValue","data","searchUrl","targetElement","$","refresh","ajax","url","cache","dataType","type_id","val","selected","success","html","change","typeSelector"],"sources":["/var/lib/gems/2.7.0/gems/decidim-initiatives-0.26.0/app/packs/src/decidim/initiatives/scoped_type.js"],"sourcesContent":["/* eslint-disable camelcase */\nconst controlSelector = function(source, prefix, currentValueKey) {\n  if (source.length) {\n    let currentValue = source.data(currentValueKey),\n        searchUrl = source.data(`${prefix}-search-url`),\n        targetElement = $(`#${source.data(`${prefix}-selector`)}`);\n\n    if (targetElement.length) {\n      let refresh = function () {\n        $.ajax({\n          url: searchUrl,\n          cache: false,\n          dataType: \"html\",\n          data: {\n            type_id: source.val(),\n            selected: currentValue\n          },\n          success: function (data) {\n            targetElement.html(data);\n          }\n        });\n      };\n\n      source.change(refresh);\n      refresh();\n    }\n  }\n};\n\n$(() => {\n  let typeSelector = $(\"[data-scope-selector]\");\n  controlSelector(typeSelector, \"scope\", \"scope-id\");\n  controlSelector(typeSelector, \"signature-types\", \"signature-type\");\n});\n"]},"metadata":{},"sourceType":"module"}