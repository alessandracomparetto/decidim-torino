{"ast":null,"code":"/* eslint-disable require-jsdoc */\n\n/* eslint-disable no-prototype-builtins, no-restricted-syntax, no-param-reassign */\nvar callbacks = {};\nexport default function registerCallback(callbackId, callback) {\n  callbacks[callbackId] = callback;\n}\n\nvar unregisterCallback = function unregisterCallback(callbackId) {\n  callbacks[callbackId] = null;\n};\n\nvar pushState = function pushState(url) {\n  var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (window.history) {\n    window.history.pushState(state, null, url);\n  }\n};\n\nvar replaceState = function replaceState(url) {\n  var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (window.history) {\n    window.history.replaceState(state, null, url);\n  }\n};\n\nvar state = function state() {\n  if (window.history) {\n    return window.history.state;\n  }\n\n  return null;\n};\n\nwindow.onpopstate = function (event) {\n  // Ensure the event is caused by user action\n  if (event.isTrusted) {\n    for (var callbackId in callbacks) {\n      if (callbacks.hasOwnProperty(callbackId)) {\n        callbacks[callbackId](event.state);\n      }\n    }\n  }\n};\n\nexport { registerCallback, unregisterCallback, pushState, replaceState, state };","map":{"version":3,"mappings":"AAAA;;AACA;AAEA,IAAIA,SAAS,GAAG,EAAhB;AAEA,eAAe,SAASC,gBAAT,CAA0BC,UAA1B,EAAsCC,QAAtC,EAAgD;AAC7DH,WAAS,CAACE,UAAD,CAATF,GAAwBG,QAAxBH;AACD;;AAED,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACF,UAAD,EAAgB;AACzCF,WAAS,CAACE,UAAD,CAATF,GAAwB,IAAxBA;AADF;;AAIA,IAAMK,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAuB;AAAA,MAAjBC,KAAiB,uEAAT,IAAS;;AACvC,MAAIC,MAAM,CAACC,OAAX,EAAoB;AAClBD,UAAM,CAACC,OAAPD,CAAeH,SAAfG,CAAyBD,KAAzBC,EAAgC,IAAhCA,EAAsCF,GAAtCE;AACD;AAHH;;AAMA,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACJ,GAAD,EAAuB;AAAA,MAAjBC,KAAiB,uEAAT,IAAS;;AAC1C,MAAIC,MAAM,CAACC,OAAX,EAAoB;AAClBD,UAAM,CAACC,OAAPD,CAAeE,YAAfF,CAA4BD,KAA5BC,EAAmC,IAAnCA,EAA0CF,GAA1CE;AACD;AAHH;;AAMA,IAAMD,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,MAAIC,MAAM,CAACC,OAAX,EAAoB;AAClB,WAAOD,MAAM,CAACC,OAAPD,CAAeD,KAAtB;AACD;;AACD,SAAO,IAAP;AAJF;;AAOAC,MAAM,CAACG,UAAPH,GAAoB,UAACI,KAAD,EAAW;AAC7B;AACA,MAAIA,KAAK,CAACC,SAAV,EAAqB;AACnB,SAAK,IAAIX,UAAT,IAAuBF,SAAvB,EAAkC;AAChC,UAAIA,SAAS,CAACc,cAAVd,CAAyBE,UAAzBF,CAAJ,EAA0C;AACxCA,iBAAS,CAACE,UAAD,CAATF,CAAsBY,KAAK,CAACL,KAA5BP;AACD;AACF;AACF;AARH;;AAWA,SAASC,gBAAT,EAA2BG,kBAA3B,EAA+CC,SAA/C,EAA0DK,YAA1D,EAAwEH,KAAxE","names":["callbacks","registerCallback","callbackId","callback","unregisterCallback","pushState","url","state","window","history","replaceState","onpopstate","event","isTrusted","hasOwnProperty"],"sources":["/var/lib/gems/2.7.0/gems/decidim-core-0.26.0/app/packs/src/decidim/history.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\n/* eslint-disable no-prototype-builtins, no-restricted-syntax, no-param-reassign */\n\nlet callbacks = {};\n\nexport default function registerCallback(callbackId, callback) {\n  callbacks[callbackId] = callback;\n}\n\nconst unregisterCallback = (callbackId) => {\n  callbacks[callbackId] = null;\n}\n\nconst pushState = (url, state = null) => {\n  if (window.history) {\n    window.history.pushState(state, null, url);\n  }\n};\n\nconst replaceState = (url, state = null) => {\n  if (window.history) {\n    window.history.replaceState(state, null,  url);\n  }\n};\n\nconst state = () => {\n  if (window.history) {\n    return window.history.state;\n  }\n  return null;\n};\n\nwindow.onpopstate = (event) => {\n  // Ensure the event is caused by user action\n  if (event.isTrusted) {\n    for (let callbackId in callbacks) {\n      if (callbacks.hasOwnProperty(callbackId)) {\n        callbacks[callbackId](event.state);\n      }\n    }\n  }\n}\n\nexport { registerCallback, unregisterCallback, pushState, replaceState, state };\n"]},"metadata":{},"sourceType":"module"}