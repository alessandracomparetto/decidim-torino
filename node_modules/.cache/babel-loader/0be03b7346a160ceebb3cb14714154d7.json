{"ast":null,"code":"import select from \"select\";\n/**\n * This provides functionality to add clipboard copy functionality to buttons\n * on the page. The element to be copied from has to be defined for the button\n * using a `data` attribute and the target element has to be a form input.\n *\n * Usage:\n *   1. Create the button:\n *     <button class=\"button\"\n *      data-clipboard-copy=\"#target-input-element\"\n *      data-clipboard-copy-label=\"Copied!\"\n *      data-clipboard-copy-message=\"The text was successfully copied to clipboard.\"\n *      aria-label=\"Copy the text to clipboard\">\n *        <%= icon \"clipboard\", role: \"presentation\", \"aria-hidden\": true %>\n *        Copy to clipboard\n *    </button>\n *\n *   2. Make sure the target element exists on the page:\n *     <input id=\"target-input-element\" type=\"text\" value=\"This text will be copied.\">\n *\n * Options through data attributes:\n * - `data-clipboard-copy` = The jQuery selector for the target input element\n *   where text will be copied from.\n * - `data-clipboard-copy-label` = The label that will be shown in the button\n *   after a succesful copy.\n * - `data-clipboard-copy-message` = The text that will be announced to screen\n *   readers after a successful copy.\n */\n// How long the \"copied\" text is shown in the copy element after successful\n// copy.\n\nvar CLIPBOARD_COPY_TIMEOUT = 5000;\n$(function () {\n  $(document).on(\"click\", \"[data-clipboard-copy]\", function (ev) {\n    var $el = $(ev.target);\n\n    if (!$el.data(\"clipboard-copy\") || $el.data(\"clipboard-copy\").length < 1) {\n      return;\n    }\n\n    var $input = $($el.data(\"clipboard-copy\"));\n\n    if ($input.length < 1 || !$input.is(\"input, textarea, select\")) {\n      return;\n    } // Get the available text to clipboard.\n\n\n    var selectedText = select($input[0]);\n\n    if (!selectedText || selectedText.length < 1) {\n      return;\n    } // Move the selected text to clipboard.\n\n\n    var $temp = $(\"<textarea>\".concat(selectedText, \"</textarea>\")).css({\n      width: 1,\n      height: 1\n    });\n    $el.after($temp);\n    $temp.select();\n\n    var copyDone = function copyDone() {\n      $temp.remove();\n      $el.focus();\n    };\n\n    try {\n      // document.execCommand is deprecated but the Clipboard API is not\n      // supported by IE (which unfortunately is still a thing).\n      if (!document.execCommand(\"copy\")) {\n        return;\n      }\n    } catch (err) {\n      copyDone();\n      return;\n    }\n\n    copyDone(); // Change the label to indicate the copying was successful.\n\n    var label = $el.data(\"clipboard-copy-label\");\n\n    if (label) {\n      var to = $el.data(\"clipboard-copy-label-timeout\");\n\n      if (to) {\n        clearTimeout(to);\n      }\n\n      if (!$el.data(\"clipboard-copy-label-original\")) {\n        $el.data(\"clipboard-copy-label-original\", $el.html());\n      }\n\n      $el.html(label);\n      to = setTimeout(function () {\n        $el.html($el.data(\"clipboard-copy-label-original\"));\n        $el.removeData(\"clipboard-copy-label-original\");\n        $el.removeData(\"clipboard-copy-label-timeout\");\n      }, CLIPBOARD_COPY_TIMEOUT);\n      $el.data(\"clipboard-copy-label-timeout\", to);\n    } // Alert the screen reader what just happened (the link was copied).\n\n\n    var message = $el.data(\"clipboard-copy-message\");\n\n    if (message) {\n      var $msg = $el.data(\"clipboard-message-element\");\n\n      if ($msg) {\n        if ($msg.html() === message) {\n          // Try to hint the screen reader to re-read the text in the message\n          // element.\n          message += \"&nbsp;\";\n        }\n      } else {\n        $msg = $('<div aria-role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" class=\"clipboard-announcement show-for-sr\"></div>');\n        $el.after($msg);\n        $el.data(\"clipboard-message-element\", $msg);\n      } // Add the non breaking space always to content to try to force the\n      // screen reader to reannounce the added text.\n\n\n      $msg.html(message);\n    }\n  });\n});","map":{"version":3,"mappings":"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","names":["select","CLIPBOARD_COPY_TIMEOUT","$","document","on","ev","$el","target","data","length","$input","is","selectedText","$temp","css","width","height","after","copyDone","remove","focus","execCommand","err","label","to","clearTimeout","html","setTimeout","removeData","message","$msg"],"sources":["/var/lib/gems/2.7.0/gems/decidim-core-0.26.0/app/packs/src/decidim/clipboard.js"],"sourcesContent":["import select from \"select\";\n\n/**\n * This provides functionality to add clipboard copy functionality to buttons\n * on the page. The element to be copied from has to be defined for the button\n * using a `data` attribute and the target element has to be a form input.\n *\n * Usage:\n *   1. Create the button:\n *     <button class=\"button\"\n *      data-clipboard-copy=\"#target-input-element\"\n *      data-clipboard-copy-label=\"Copied!\"\n *      data-clipboard-copy-message=\"The text was successfully copied to clipboard.\"\n *      aria-label=\"Copy the text to clipboard\">\n *        <%= icon \"clipboard\", role: \"presentation\", \"aria-hidden\": true %>\n *        Copy to clipboard\n *    </button>\n *\n *   2. Make sure the target element exists on the page:\n *     <input id=\"target-input-element\" type=\"text\" value=\"This text will be copied.\">\n *\n * Options through data attributes:\n * - `data-clipboard-copy` = The jQuery selector for the target input element\n *   where text will be copied from.\n * - `data-clipboard-copy-label` = The label that will be shown in the button\n *   after a succesful copy.\n * - `data-clipboard-copy-message` = The text that will be announced to screen\n *   readers after a successful copy.\n */\n\n// How long the \"copied\" text is shown in the copy element after successful\n// copy.\nconst CLIPBOARD_COPY_TIMEOUT = 5000;\n\n$(() => {\n  $(document).on(\"click\", \"[data-clipboard-copy]\", (ev) => {\n    const $el = $(ev.target);\n    if (!$el.data(\"clipboard-copy\") || $el.data(\"clipboard-copy\").length < 1) {\n      return;\n    }\n\n    const $input = $($el.data(\"clipboard-copy\"));\n    if ($input.length < 1 || !$input.is(\"input, textarea, select\")) {\n      return;\n    }\n\n    // Get the available text to clipboard.\n    const selectedText = select($input[0]);\n    if (!selectedText || selectedText.length < 1) {\n      return;\n    }\n\n    // Move the selected text to clipboard.\n    const $temp = $(`<textarea>${selectedText}</textarea>`).css({\n      width: 1,\n      height: 1\n    });\n    $el.after($temp);\n    $temp.select();\n\n    const copyDone = () => {\n      $temp.remove();\n      $el.focus();\n    };\n    try {\n      // document.execCommand is deprecated but the Clipboard API is not\n      // supported by IE (which unfortunately is still a thing).\n      if (!document.execCommand(\"copy\")) {\n        return;\n      }\n    } catch (err) {\n      copyDone();\n      return;\n    }\n    copyDone();\n\n    // Change the label to indicate the copying was successful.\n    const label = $el.data(\"clipboard-copy-label\");\n    if (label) {\n      let to = $el.data(\"clipboard-copy-label-timeout\");\n      if (to) {\n        clearTimeout(to);\n      }\n\n      if (!$el.data(\"clipboard-copy-label-original\")) {\n        $el.data(\"clipboard-copy-label-original\", $el.html());\n      }\n\n      $el.html(label);\n      to = setTimeout(() => {\n        $el.html($el.data(\"clipboard-copy-label-original\"));\n        $el.removeData(\"clipboard-copy-label-original\");\n        $el.removeData(\"clipboard-copy-label-timeout\");\n      }, CLIPBOARD_COPY_TIMEOUT);\n      $el.data(\"clipboard-copy-label-timeout\", to)\n    }\n\n    // Alert the screen reader what just happened (the link was copied).\n    let message = $el.data(\"clipboard-copy-message\");\n    if (message) {\n      let $msg = $el.data(\"clipboard-message-element\");\n      if ($msg) {\n        if ($msg.html() === message) {\n          // Try to hint the screen reader to re-read the text in the message\n          // element.\n          message += \"&nbsp;\";\n        }\n      } else {\n        $msg = $('<div aria-role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" class=\"clipboard-announcement show-for-sr\"></div>');\n        $el.after($msg);\n        $el.data(\"clipboard-message-element\", $msg);\n      }\n\n      // Add the non breaking space always to content to try to force the\n      // screen reader to reannounce the added text.\n      $msg.html(message);\n    }\n  });\n});\n"]},"metadata":{},"sourceType":"module"}