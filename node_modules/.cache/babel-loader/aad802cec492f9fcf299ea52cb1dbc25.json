{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nvar SubformMultiTogglerComponent = /*#__PURE__*/function () {\n  function SubformMultiTogglerComponent() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, SubformMultiTogglerComponent);\n\n    this.controllerSelect = options.controllerSelect;\n    this.subformWrapperClass = options.subformWrapperClass;\n    this.globalWrapperSelector = options.globalWrapperSelector;\n\n    this._bindEvent();\n\n    this._runAll();\n  }\n\n  _createClass(SubformMultiTogglerComponent, [{\n    key: \"_runAll\",\n    value: function _runAll() {\n      var _this = this;\n\n      this.controllerSelect.each(function (idx, el) {\n        _this.run(el);\n      });\n    }\n  }, {\n    key: \"run\",\n    value: function run(target) {\n      var $target = $(target);\n      var subformWrapperClass = this.subformWrapperClass;\n      var value = $target.val();\n      var $form = $target.parents(this.globalWrapperSelector);\n      var $selectedSubform = $form.find(\"#\".concat(subformWrapperClass, \"-\").concat(value));\n\n      if ($target.prop(\"checked\")) {\n        $selectedSubform.find(\"input,textarea,select\").prop(\"disabled\", false);\n        $selectedSubform.show();\n      } else {\n        $selectedSubform.find(\"input,textarea,select\").prop(\"disabled\", true);\n        $selectedSubform.hide();\n      }\n    }\n  }, {\n    key: \"_bindEvent\",\n    value: function _bindEvent() {\n      var _this2 = this;\n\n      this.controllerSelect.on(\"change\", function (event) {\n        _this2.run(event.target);\n      });\n    }\n  }]);\n\n  return SubformMultiTogglerComponent;\n}();\n\nexport { SubformMultiTogglerComponent as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAAqBA,4B;AACnB,0CAA0B;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAAC;;AACxB,SAAKC,gBAAL,GAAwBF,OAAO,CAACE,gBAAhC;AACA,SAAKC,mBAAL,GAA2BH,OAAO,CAACG,mBAAnC;AACA,SAAKC,qBAAL,GAA6BJ,OAAO,CAACI,qBAArC;;AACA,SAAKC,UAAL;;AACA,SAAKC,OAAL;AACD;;;;WAED,mBAAU;AAAA;;AACR,WAAKJ,gBAAL,CAAsBK,IAAtB,CAA2B,UAACC,GAAD,EAAMC,EAAN,EAAa;AACtCC,aAAI,CAACC,GAAL,CAASF,EAAT;AADF;AAGD;;;WAED,aAAIG,MAAJ,EAAY;AACV,UAAIC,OAAO,GAAGC,CAAC,CAACF,MAAD,CAAf;AACA,UAAIT,mBAAmB,GAAG,KAAKA,mBAA/B;AACA,UAAIY,KAAK,GAAGF,OAAO,CAACG,GAARH,EAAZ;AAEA,UAAII,KAAK,GAAGJ,OAAO,CAACK,OAARL,CAAgB,KAAKT,qBAArBS,CAAZ;AACA,UAAIM,gBAAgB,GAAGF,KAAK,CAACG,IAANH,YAAed,mBAAf,cAAsCY,KAAtC,EAAvB;;AAEA,UAAIF,OAAO,CAACQ,IAARR,CAAa,SAAbA,CAAJ,EAA6B;AAC3BM,wBAAgB,CAACC,IAAjBD,CAAsB,uBAAtBA,EAA+CE,IAA/CF,CAAoD,UAApDA,EAAgE,KAAhEA;AACAA,wBAAgB,CAACG,IAAjBH;AAFF,aAGO;AACLA,wBAAgB,CAACC,IAAjBD,CAAsB,uBAAtBA,EAA+CE,IAA/CF,CAAoD,UAApDA,EAAgE,IAAhEA;AACAA,wBAAgB,CAACI,IAAjBJ;AACD;AACF;;;WAED,sBAAa;AAAA;;AACX,WAAKjB,gBAAL,CAAsBsB,EAAtB,CAAyB,QAAzB,EAAmC,UAACC,KAAD,EAAW;AAC5CC,cAAI,CAACf,GAAL,CAASc,KAAK,CAACb,MAAf;AADF;AAGD;;;;;;SApCkBb,4B","names":["SubformMultiTogglerComponent","options","_classCallCheck","controllerSelect","subformWrapperClass","globalWrapperSelector","_bindEvent","_runAll","each","idx","el","_this","run","target","$target","$","value","val","$form","parents","$selectedSubform","find","prop","show","hide","on","event","_this2"],"sources":["/var/lib/gems/2.7.0/gems/decidim-admin-0.26.0/app/packs/src/decidim/admin/subform_multi_toggler.component.js"],"sourcesContent":["export default class SubformMultiTogglerComponent {\n  constructor(options = {}) {\n    this.controllerSelect = options.controllerSelect;\n    this.subformWrapperClass = options.subformWrapperClass;\n    this.globalWrapperSelector = options.globalWrapperSelector;\n    this._bindEvent();\n    this._runAll();\n  }\n\n  _runAll() {\n    this.controllerSelect.each((idx, el) => {\n      this.run(el);\n    });\n  }\n\n  run(target) {\n    let $target = $(target);\n    let subformWrapperClass = this.subformWrapperClass;\n    let value = $target.val();\n\n    let $form = $target.parents(this.globalWrapperSelector);\n    let $selectedSubform = $form.find(`#${subformWrapperClass}-${value}`)\n\n    if ($target.prop(\"checked\")) {\n      $selectedSubform.find(\"input,textarea,select\").prop(\"disabled\", false);\n      $selectedSubform.show();\n    } else {\n      $selectedSubform.find(\"input,textarea,select\").prop(\"disabled\", true);\n      $selectedSubform.hide();\n    }\n  }\n\n  _bindEvent() {\n    this.controllerSelect.on(\"change\", (event) => {\n      this.run(event.target);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}