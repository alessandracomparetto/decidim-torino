{"ast":null,"code":"/* eslint-disable require-jsdoc, max-lines, no-return-assign, func-style, id-length, no-plusplus, no-use-before-define, no-negated-condition, init-declarations, no-invalid-this, no-param-reassign, no-ternary, multiline-ternary, no-nested-ternary, no-eval, no-extend-native, prefer-reflect */\n\n/* eslint dot-location: [\"error\", \"property\"], no-negated-condition: \"error\" */\n\n/* eslint no-unused-expressions: [\"error\", { \"allowTernary\": true }] */\n\n/* eslint no-unused-vars: 0 */\n\n/* global d3 */\nimport * as d3 from \"d3\";\nimport renderChart from \"src/decidim/vizzs/renders\"; // lib\n\nvar renderOrgCharts = function renderOrgCharts() {\n  var $orgChartContainer = $(\".js-orgchart\");\n  var $btnReset = $(\".js-reset-orgchart\");\n  var dataDepicted = null;\n  var fake = false;\n  var orgchart = {}; // lib - https://bl.ocks.org/bumbeishvili/b96ba47ea21d14dfce6ebb859b002d3a\n\n  var renderChartCollapsibleNetwork = function renderChartCollapsibleNetwork(params) {\n    // exposed variables\n    var attrs = {\n      id: \"id\".concat(Math.floor(Math.random() * 1000000)),\n      svgWidth: 960,\n      svgHeight: 600,\n      marginTop: 0,\n      marginBottom: 5,\n      marginRight: 0,\n      marginLeft: 30,\n      container: \"body\",\n      distance: 150,\n      hiddenChildLevel: 1,\n      hoverOpacity: 0.2,\n      maxTextDisplayZoomLevel: 1,\n      lineStrokeWidth: 1.5,\n      fakeRoot: false,\n      nodeGutter: {\n        x: 16,\n        y: 8\n      },\n      childrenIndicatorRadius: 15,\n      fakeBorderWidth: 32,\n      data: null\n    };\n    /* ############### IF EXISTS OVERWRITE ATTRIBUTES FROM PASSED PARAM  #######  */\n\n    var attrKeys = Object.keys(attrs);\n    attrKeys.forEach(function (key) {\n      if (params && params[key]) {\n        attrs[key] = params[key];\n      }\n    }); // innerFunctions which will update visuals\n\n    var updateData;\n\n    var _collapse, _expand;\n\n    var filter;\n    var hierarchy = {}; // main chart object\n\n    var main = function main(selection) {\n      selection.each(function scope() {\n        // calculated properties\n        var calc = {};\n        calc.chartLeftMargin = attrs.marginLeft;\n        calc.chartTopMargin = attrs.marginTop;\n        calc.chartWidth = attrs.svgWidth - attrs.marginRight - calc.chartLeftMargin;\n        calc.chartHeight = attrs.svgHeight - attrs.marginBottom - calc.chartTopMargin; // ########################## HIERARCHY STUFF  #########################\n\n        hierarchy.root = d3.hierarchy(attrs.data.root); // ###########################   BEHAVIORS #########################\n\n        var behaviors = {}; // behaviors.zoom = d3.zoom().scaleExtent([0.75, 100, 8]).on(\"zoom\", zoomed)\n\n        behaviors.drag = d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended); // ###########################   LAYOUTS #########################\n\n        var layouts = {}; // custom radial layout\n\n        layouts.radial = radial(); // ###########################   FORCE STUFF #########################\n\n        var force = {};\n        force.link = d3.forceLink().id(function (d) {\n          return d.id;\n        });\n        force.charge = d3.forceManyBody().strength(-240);\n        force.center = d3.forceCenter(calc.chartWidth / 2, calc.chartHeight / 2); // prevent collide\n\n        force.collide = d3.forceCollide().radius(function (d) {\n          // Creates an invented radius based on element measures: diagonal = 2 * radius = sqrt(width^2, height^2)\n          var base = (d.bbox || {}).width + attrs.nodeGutter.x * 2;\n          var height = (d.bbox || {}).height + attrs.nodeGutter.y * 2;\n          var diagonal = Math.sqrt(Math.pow(base, 2) + Math.pow(height, 2));\n          var fakeRadius = diagonal / 2; // return d3.max([attrs.nodeDistance * 3, fakeRadius])\n\n          return fakeRadius * 1.5;\n        }); // manually set x positions (which is calculated using custom radial layout)\n\n        force.x = d3.forceX().strength(0.5).x(function (d) {\n          // if node does not have children and is channel (depth=2) , then position it on parent's coordinate\n          if (!d.children && d.depth > 2) {\n            if (d.parent) {\n              d = d.parent;\n            }\n          } // custom circle projection -  radius will be -  (d.depth - 1) * 150\n\n\n          return projectCircle(d.proportion, (d.depth - 1) * attrs.distance)[0];\n        }); // manually set y positions (which is calculated using d3.cluster)\n\n        force.y = d3.forceY().strength(0.5).y(function (d) {\n          // if node does not have children and is channel (depth=2) , then position it on parent's coordinate\n          if (!d.children && d.depth > 2) {\n            if (d.parent) {\n              d = d.parent;\n            }\n          } // custom circle projection -  radius will be -  (d.depth - 1) * 150\n\n\n          return projectCircle(d.proportion, (d.depth - 1) * attrs.distance)[1];\n        }); // ---------------------------------  INITIALISE FORCE SIMULATION ----------------------------\n        // get based on top parameter simulation\n\n        force.simulation = d3.forceSimulation().force(\"link\", force.link).force(\"charge\", force.charge).force(\"center\", force.center).force(\"collide\", force.collide).force(\"x\", force.x).force(\"y\", force.y); // ###########################   HIERARCHY STUFF #########################\n        // flatten root\n\n        var arr = flatten(hierarchy.root); // hide members based on their depth\n\n        arr.forEach(function (d) {\n          // Hide fake root node\n          if (attrs.fakeRoot && d.depth === 1) {\n            d.hidden = true;\n          }\n\n          if (d.depth > attrs.hiddenChildLevel) {\n            d._children = d.children;\n            d.children = null;\n          }\n        }); // ####################################  DRAWINGS #######################\n        // drawing containers\n\n        var container = d3.select(this); // add svg\n\n        var svg = container.patternify({\n          tag: \"svg\",\n          selector: \"svg-chart-container\"\n        }).attr(\"width\", attrs.svgWidth).attr(\"height\", attrs.svgHeight); // .call(behaviors.zoom)\n        // add container g element\n\n        var chart = svg.patternify({\n          tag: \"g\",\n          selector: \"chart\"\n        }).attr(\"transform\", \"translate(\".concat(calc.chartLeftMargin, \",\").concat(calc.chartTopMargin, \")\")); // ################################   Chart Content Drawing ##################################\n        // link wrapper\n\n        var linksWrapper = chart.patternify({\n          tag: \"g\",\n          selector: \"links-wrapper\"\n        }); // node wrapper\n\n        var nodesWrapper = chart.patternify({\n          tag: \"g\",\n          selector: \"nodes-wrapper\"\n        });\n        var links, nodes; // reusable function which updates visual based on data change\n\n        update(); // update visual based on data change\n\n        function update(clickedNode) {\n          // Show/hide reset button\n          clickedNode ? $btnReset.removeClass(\"invisible\") : $btnReset.addClass(\"invisible\"); // set xy and proportion properties with custom radial layout\n\n          layouts.radial(hierarchy.root); // nodes and links array\n\n          var nodesArr = flatten(hierarchy.root, true).orderBy(function (d) {\n            return d.depth;\n          }).filter(function (d) {\n            return !d.hidden;\n          });\n          var linksArr = hierarchy.root.links().filter(function (d) {\n            return !d.source.hidden;\n          }).filter(function (d) {\n            return !d.target.hidden;\n          }); // make new nodes to appear near the parents\n\n          nodesArr.forEach(function (d) {\n            if (clickedNode && clickedNode.id === (d.parent && d.parent.id)) {\n              d.x = d.parent.x;\n              d.y = d.parent.y;\n            }\n          }); // links\n\n          links = linksWrapper.selectAll(\".link\").data(linksArr, function (d) {\n            return d.target.id;\n          });\n          links.exit().remove();\n          links = links.enter().append(\"line\").attr(\"class\", \"link\").merge(links); // node groups\n\n          nodes = nodesWrapper.selectAll(\".node\").data(nodesArr, function (d) {\n            return d.id;\n          });\n          nodes.exit().remove();\n          var enteredNodes = nodes.enter().append(\"g\").attr(\"class\", \"node\"); // bind event handlers\n\n          enteredNodes.on(\"click\", nodeClick).on(\"mouseenter\", nodeMouseEnter).on(\"mouseleave\", nodeMouseLeave).call(behaviors.drag); // channels grandchildren\n\n          enteredNodes.append(\"rect\").attr(\"class\", \"as-card\").attr(\"rx\", 4).attr(\"ry\", 4);\n          enteredNodes.append(\"text\").attr(\"class\", \"as-text\").text(function (d) {\n            return d.data.name;\n          });\n          enteredNodes.selectAll(\"text\").each(function (d) {\n            d.bbox = this.getBBox();\n          });\n          enteredNodes.selectAll(\"rect\").attr(\"x\", function (d) {\n            return d.bbox.x - attrs.nodeGutter.x;\n          }).attr(\"y\", function (d) {\n            return d.bbox.y - attrs.nodeGutter.y;\n          }).attr(\"width\", function (d) {\n            return d.bbox.width + 2 * attrs.nodeGutter.x;\n          }).attr(\"height\", function (d) {\n            return d.bbox.height + 2 * attrs.nodeGutter.y;\n          }); // append circle & text only when there are children\n\n          enteredNodes.append(\"circle\").filter(function (d) {\n            return Boolean(d.children) || Boolean(d._children);\n          }).attr(\"class\", \"as-circle\").attr(\"r\", attrs.childrenIndicatorRadius).attr(\"cx\", function (d) {\n            return d.bbox.x + d.bbox.width + attrs.nodeGutter.x;\n          }).attr(\"cy\", function (d) {\n            return d.bbox.y + d.bbox.height + attrs.nodeGutter.y;\n          });\n          enteredNodes.append(\"text\").filter(function (d) {\n            return Boolean(d.children) || Boolean(d._children);\n          }).attr(\"class\", \"as-text\").attr(\"dx\", function (d) {\n            return d.bbox.x + d.bbox.width + attrs.nodeGutter.x;\n          }).attr(\"dy\", attrs.childrenIndicatorRadius + 3).text(function (d) {\n            return d3.max([(d.children || {}).length, (d._children || {}).length]);\n          }); // merge  node groups and style it\n\n          nodes = enteredNodes.merge(nodes); // force simulation\n\n          force.simulation.nodes(nodesArr).on(\"tick\", ticked); // links simulation\n\n          force.simulation.force(\"link\").links(links).id(function (d) {\n            return d.id;\n          }).distance(attrs.distance * 2).strength(2);\n        } // ####################################### EVENT HANDLERS  ########################\n        // zoom handler\n        // function zoomed() {\n        //   // get transform event\n        //   let transform = d3.event.transform\n        //   attrs.lastTransform = transform\n        //\n        //   // apply transform event props to the wrapper\n        //   chart.attr(\"transform\", transform)\n        //\n        //   svg.selectAll(\".node\").attr(\"transform\", (d) => `translate(${d.x},${d.y}) scale(${1 / (attrs.lastTransform ? attrs.lastTransform.k : 1)})`)\n        //   svg.selectAll(\".link\").attr(\"stroke-width\", attrs.lineStrokeWidth / (attrs.lastTransform ? attrs.lastTransform.k : 1))\n        // }\n        // tick handler\n\n\n        function ticked() {\n          var fakeBorderWidth = attrs.fakeBorderWidth;\n\n          var maxXValueAvailable = function maxXValueAvailable(value) {\n            return Math.max(Math.min(calc.chartWidth - fakeBorderWidth, value), fakeBorderWidth);\n          };\n\n          var maxYValueAvailable = function maxYValueAvailable(value) {\n            return Math.max(Math.min(calc.chartHeight - fakeBorderWidth, value), fakeBorderWidth);\n          }; // set links position\n\n\n          links.attr(\"x1\", function (d) {\n            return maxXValueAvailable(d.source.x);\n          }).attr(\"y1\", function (d) {\n            return maxYValueAvailable(d.source.y);\n          }).attr(\"x2\", function (d) {\n            return maxXValueAvailable(d.target.x);\n          }).attr(\"y2\", function (d) {\n            return maxYValueAvailable(d.target.y);\n          }); // set nodes position\n\n          svg.selectAll(\".node\").attr(\"transform\", function (d) {\n            return \"translate(\".concat(maxXValueAvailable(d.x), \",\").concat(maxYValueAvailable(d.y), \")\");\n          });\n        } // handler drag start event\n\n\n        function dragstarted() {\n          // disable node fixing\n          nodes.each(function (d) {\n            d.fx = null;\n            d.fy = null;\n          });\n        } // handle dragging event\n\n\n        function dragged(d) {\n          // make dragged node fixed\n          d.fx = d3.event.x;\n          d.fy = d3.event.y;\n        } // -------------------- handle drag end event ---------------\n\n\n        function dragended() {// we are doing nothing, here , aren't we?\n        } // -------------------------- node mouse hover handler ---------------\n\n\n        function nodeMouseEnter(d) {\n          // get links\n          var _links = hierarchy.root.links(); // get hovered node connected links\n\n\n          var connectedLinks = _links.filter(function (l) {\n            return l.source.id === d.id || l.target.id === d.id;\n          }); // get hovered node linked nodes\n\n\n          var linkedNodes = connectedLinks.map(function (s) {\n            return s.source.id;\n          }).concat(connectedLinks.map(function (c) {\n            return c.target.id;\n          })); // reduce all other nodes opacity\n\n          nodesWrapper.selectAll(\".node\").filter(function (n) {\n            return linkedNodes.indexOf(n.id) === -1;\n          }).attr(\"opacity\", attrs.hoverOpacity); // reduce all other links opacity\n\n          linksWrapper.selectAll(\".link\").attr(\"opacity\", attrs.hoverOpacity); // highlight hovered nodes connections\n\n          linksWrapper.selectAll(\".link\").filter(function (l) {\n            return l.source.id === d.id || l.target.id === d.id;\n          }).attr(\"opacity\", 1);\n        } // --------------- handle mouseleave event ---------------\n\n\n        function nodeMouseLeave() {\n          // return things back to normal\n          nodesWrapper.selectAll(\".node\").attr(\"opacity\", 1);\n          linksWrapper.selectAll(\".link\").attr(\"opacity\", 1);\n        } // --------------- handle node click event ---------------\n\n\n        function nodeClick(d) {\n          // free fixed nodes\n          nodes.each(function (di) {\n            di.fx = null;\n            di.fy = null;\n          }); // collapse or expand node\n\n          if (d.children) {\n            _collapse(d);\n          } else if (d._children) {\n            _expand(d);\n          } else {// nothing is to collapse or expand\n          }\n\n          freeNodes();\n        } // #########################################  UTIL FUNCS ##################################\n\n\n        updateData = function updateData() {\n          main.run();\n        };\n\n        _collapse = function collapse(d) {\n          var deep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n          if (d.children) {\n            if (deep) {\n              d.children.forEach(function (e) {\n                return _collapse(e, true);\n              });\n            }\n\n            d._children = d.children;\n            d.children = null;\n          }\n\n          update(d);\n          force.simulation.restart();\n          force.simulation.alphaTarget(0.15);\n        };\n\n        _expand = function expand(d) {\n          var deep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n          if (d._children) {\n            if (deep) {\n              d._children.forEach(function (e) {\n                return _expand(e, true);\n              });\n            }\n\n            d.children = d._children;\n            d._children = null;\n          }\n\n          update(d);\n          force.simulation.restart();\n          force.simulation.alphaTarget(0.15);\n        }; // function slowDownNodes() {\n        //   force.simulation.alphaTarget(0.05)\n        // }\n        // function speedUpNodes() {\n        //   force.simulation.alphaTarget(0.45)\n        // }\n\n\n        function freeNodes() {\n          d3.selectAll(\".node\").each(function (n) {\n            n.fx = null;\n            n.fy = null;\n          });\n        }\n\n        function projectCircle(value, radius) {\n          var r = radius || 0;\n          var corner = value * 2 * Math.PI;\n          return [Math.sin(corner) * r, -Math.cos(corner) * r];\n        } // recursively loop on children and extract nodes as an array\n\n\n        function flatten(root, clustered) {\n          var nodesArray = [];\n          var i = 0;\n\n          function recurse(node, depth) {\n            if (node.children) {\n              node.children.forEach(function (child) {\n                recurse(child, depth + 1);\n              });\n            }\n\n            if (!node.id) {\n              node.id = ++i;\n            } else {\n              ++i;\n            }\n\n            node.depth = depth;\n\n            if (clustered) {\n              if (!node.cluster) {\n                // if cluster coordinates are not set, set it\n                node.cluster = {\n                  x: node.x,\n                  y: node.y\n                };\n              }\n            }\n\n            nodesArray.push(node);\n          }\n\n          recurse(root, 1);\n          return nodesArray;\n        }\n\n        function debug() {\n          if (attrs.isDebug) {\n            // stringify func\n            var stringified = String(scope); // parse variable names\n\n            var groupVariables = stringified // match var x-xx= {}\n            .match(/var\\s+([\\w])+\\s*=\\s*{\\s*}/gi) // match xxx\n            .map(function (d) {\n              return d.match(/\\s+\\w*/gi).filter(function (s) {\n                return s.trim();\n              });\n            }) // get xxx\n            .map(function (v) {\n              return v[0].trim();\n            }); // assign local variables to the scope\n\n            groupVariables.forEach(function (v) {\n              main[\"P_\".concat(v)] = eval(v);\n            });\n          }\n        }\n\n        debug();\n      });\n    }; // ----------- PROTOTYEPE FUNCTIONS  ----------------------\n\n\n    d3.selection.prototype.patternify = function (_params) {\n      var selector = _params.selector;\n      var elementTag = _params.tag;\n\n      var _data = _params.data || [selector]; // pattern in action\n\n\n      var selection = this.selectAll(\".\".concat(selector)).data(_data);\n      selection.exit().remove();\n      selection = selection.enter().append(elementTag).merge(selection);\n      selection.attr(\"class\", selector);\n      return selection;\n    }; // custom radial layout\n\n\n    function radial() {\n      return function (root) {\n        recurse(root, 0, 1);\n\n        function recurse(node, min, max) {\n          node.proportion = (max + min) / 2;\n\n          if (!node.x) {\n            // if node has parent, match entered node positions to it's parent\n            if (node.parent) {\n              node.x = node.parent.x;\n            } else {\n              node.x = 0;\n            }\n          } // if node had parent, match entered node positions to it's parent\n\n\n          if (!node.y) {\n            if (node.parent) {\n              node.y = node.parent.y;\n            } else {\n              node.y = 0;\n            }\n          } // recursively do the same for children\n\n\n          if (node.children) {\n            var offset = (max - min) / node.children.length;\n            node.children.forEach(function (child, i) {\n              var newMin = min + offset * i;\n              var newMax = newMin + offset;\n              recurse(child, newMin, newMax);\n            });\n          }\n        }\n      };\n    } // https://github.com/bumbeishvili/d3js-boilerplates#orderby\n\n\n    Array.prototype.orderBy = function (func) {\n      this.sort(function (_a, _b) {\n        var a = func(_a);\n        var b = func(_b);\n\n        if (typeof a === \"string\" || a instanceof String) {\n          return a.localeCompare(b);\n        }\n\n        return a - b;\n      });\n      return this;\n    }; // ##########################  BOILEPLATE STUFF ################\n    // dinamic keys functions\n\n\n    Object.keys(attrs).forEach(function (key) {\n      // Attach variables to main function\n      return main[key] = function (_) {\n        var string = \"attrs['\".concat(key, \"'] = _\");\n\n        if (!arguments.length) {\n          return eval(\" attrs['\".concat(key, \"'];\"));\n        }\n\n        eval(string);\n        return main;\n      };\n    }); // set attrs as property\n\n    main.attrs = attrs; // debugging visuals\n\n    main.debug = function (isDebug) {\n      attrs.isDebug = isDebug;\n\n      if (isDebug) {\n        if (!window.charts) {\n          window.charts = [];\n        }\n\n        window.charts.push(main);\n      }\n\n      return main;\n    }; // exposed update functions\n\n\n    main.data = function (value) {\n      if (!arguments.length) {\n        return attrs.data;\n      }\n\n      attrs.data = value;\n\n      if (typeof updateData === \"function\") {\n        updateData();\n      }\n\n      return main;\n    }; // run  visual\n\n\n    main.run = function () {\n      d3.selectAll(attrs.container).call(main);\n      return main;\n    };\n\n    main.filter = function (filterParams) {\n      if (!arguments.length) {\n        return attrs.filterParams;\n      }\n\n      attrs.filterParams = filterParams;\n\n      if (typeof filter === \"function\") {\n        filter();\n      }\n\n      return main;\n    };\n\n    main.reset = function () {\n      hierarchy.root.children.forEach(function (e) {\n        return _collapse(e, true);\n      });\n      main.run();\n      return main;\n    };\n\n    return main;\n  }; // initialization\n\n\n  $orgChartContainer.each(function (i, container) {\n    var $container = $(container);\n    var width = $container.width();\n    var height = width / (16 / 9);\n    d3.json($container.data(\"url\")).then(function (data) {\n      // Make a fake previous node if the data entry is not hierarchical\n      if (data instanceof Array) {\n        fake = true;\n        dataDepicted = {\n          name: null,\n          children: data\n        };\n      } else {\n        dataDepicted = data;\n      }\n\n      orgchart = renderChartCollapsibleNetwork().svgHeight(height).svgWidth(width).fakeRoot(fake).container(\"#\".concat(container.id)).data({\n        root: dataDepicted\n      }).debug(true).run();\n    });\n  }); // reset\n\n  $btnReset.click(function () {\n    orgchart.reset();\n  });\n};\n\n$(function () {\n  renderChart(renderOrgCharts);\n});","map":{"version":3,"mappings":"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","names":["d3","renderChart","renderOrgCharts","$orgChartContainer","$","$btnReset","dataDepicted","fake","orgchart","renderChartCollapsibleNetwork","params","attrs","id","Math","floor","random","svgWidth","svgHeight","marginTop","marginBottom","marginRight","marginLeft","container","distance","hiddenChildLevel","hoverOpacity","maxTextDisplayZoomLevel","lineStrokeWidth","fakeRoot","nodeGutter","x","y","childrenIndicatorRadius","fakeBorderWidth","data","attrKeys","Object","keys","forEach","key","updateData","collapse","expand","filter","hierarchy","main","selection","each","scope","calc","chartLeftMargin","chartTopMargin","chartWidth","chartHeight","root","behaviors","drag","on","dragstarted","dragged","dragended","layouts","radial","force","link","forceLink","d","charge","forceManyBody","strength","center","forceCenter","collide","forceCollide","radius","base","bbox","width","height","diagonal","sqrt","pow","fakeRadius","forceX","children","depth","parent","projectCircle","proportion","forceY","simulation","forceSimulation","arr","flatten","hidden","_children","select","svg","patternify","tag","selector","attr","chart","linksWrapper","nodesWrapper","links","nodes","update","clickedNode","removeClass","addClass","nodesArr","orderBy","linksArr","source","target","selectAll","exit","remove","enter","append","merge","enteredNodes","nodeClick","nodeMouseEnter","nodeMouseLeave","call","text","name","getBBox","Boolean","max","length","ticked","maxXValueAvailable","value","min","maxYValueAvailable","fx","fy","event","_links","connectedLinks","l","linkedNodes","map","s","concat","c","n","indexOf","di","freeNodes","run","deep","e","restart","alphaTarget","r","corner","PI","sin","cos","clustered","nodesArray","i","recurse","node","child","cluster","push","debug","isDebug","stringified","String","groupVariables","match","trim","v","eval","prototype","_params","elementTag","_data","offset","newMin","newMax","Array","func","sort","_a","_b","a","b","localeCompare","_","string","arguments","window","charts","filterParams","reset","$container","json","then","click"],"sources":["/var/lib/gems/2.7.0/gems/decidim-assemblies-0.26.0/app/packs/src/decidim/assemblies/orgchart.js"],"sourcesContent":["/* eslint-disable require-jsdoc, max-lines, no-return-assign, func-style, id-length, no-plusplus, no-use-before-define, no-negated-condition, init-declarations, no-invalid-this, no-param-reassign, no-ternary, multiline-ternary, no-nested-ternary, no-eval, no-extend-native, prefer-reflect */\n/* eslint dot-location: [\"error\", \"property\"], no-negated-condition: \"error\" */\n/* eslint no-unused-expressions: [\"error\", { \"allowTernary\": true }] */\n/* eslint no-unused-vars: 0 */\n/* global d3 */\n\nimport * as d3 from \"d3\"\nimport renderChart from \"src/decidim/vizzs/renders\"\n\n// lib\nconst renderOrgCharts = () => {\n  const $orgChartContainer = $(\".js-orgchart\")\n  const $btnReset = $(\".js-reset-orgchart\")\n\n  let dataDepicted = null\n  let fake = false\n  let orgchart = {}\n\n  // lib - https://bl.ocks.org/bumbeishvili/b96ba47ea21d14dfce6ebb859b002d3a\n  const renderChartCollapsibleNetwork = (params) => {\n\n    // exposed variables\n    let attrs = {\n      id: `id${Math.floor(Math.random() * 1000000)}`,\n      svgWidth: 960,\n      svgHeight: 600,\n      marginTop: 0,\n      marginBottom: 5,\n      marginRight: 0,\n      marginLeft: 30,\n      container: \"body\",\n      distance: 150,\n      hiddenChildLevel: 1,\n      hoverOpacity: 0.2,\n      maxTextDisplayZoomLevel: 1,\n      lineStrokeWidth: 1.5,\n      fakeRoot: false,\n      nodeGutter: { x: 16, y: 8 },\n      childrenIndicatorRadius: 15,\n      fakeBorderWidth: 32,\n      data: null\n    }\n\n    /* ############### IF EXISTS OVERWRITE ATTRIBUTES FROM PASSED PARAM  #######  */\n\n    let attrKeys = Object.keys(attrs)\n    attrKeys.forEach(function (key) {\n      if (params && params[key]) {\n        attrs[key] = params[key]\n      }\n    })\n\n    // innerFunctions which will update visuals\n    let updateData\n    let collapse, expand\n    let filter\n    let hierarchy = {}\n\n    // main chart object\n    let main = function (selection) {\n      selection.each(function scope() {\n\n        // calculated properties\n        let calc = {}\n        calc.chartLeftMargin = attrs.marginLeft\n        calc.chartTopMargin = attrs.marginTop\n        calc.chartWidth = attrs.svgWidth - attrs.marginRight - calc.chartLeftMargin\n        calc.chartHeight = attrs.svgHeight - attrs.marginBottom - calc.chartTopMargin\n\n        // ########################## HIERARCHY STUFF  #########################\n        hierarchy.root = d3.hierarchy(attrs.data.root)\n\n        // ###########################   BEHAVIORS #########################\n        let behaviors = {}\n        // behaviors.zoom = d3.zoom().scaleExtent([0.75, 100, 8]).on(\"zoom\", zoomed)\n        behaviors.drag = d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended)\n\n        // ###########################   LAYOUTS #########################\n        let layouts = {}\n\n        // custom radial layout\n        layouts.radial = radial()\n\n        // ###########################   FORCE STUFF #########################\n        let force = {}\n        force.link = d3.forceLink().id((d) => d.id)\n        force.charge = d3.forceManyBody().strength(-240)\n        force.center = d3.forceCenter(calc.chartWidth / 2, calc.chartHeight / 2)\n\n        // prevent collide\n        force.collide = d3.forceCollide().radius((d) => {\n          // Creates an invented radius based on element measures: diagonal = 2 * radius = sqrt(width^2, height^2)\n          let base = (d.bbox || {}).width + (attrs.nodeGutter.x * 2)\n          let height = (d.bbox || {}).height + (attrs.nodeGutter.y * 2)\n          let diagonal = Math.sqrt(Math.pow(base, 2) + Math.pow(height, 2))\n          let fakeRadius = (diagonal / 2)\n\n          // return d3.max([attrs.nodeDistance * 3, fakeRadius])\n          return fakeRadius * 1.5\n        })\n\n        // manually set x positions (which is calculated using custom radial layout)\n        force.x = d3.forceX()\n          .strength(0.5)\n          .x(function (d) {\n\n            // if node does not have children and is channel (depth=2) , then position it on parent's coordinate\n            if (!d.children && d.depth > 2) {\n              if (d.parent) {\n                d = d.parent\n              }\n            }\n\n            // custom circle projection -  radius will be -  (d.depth - 1) * 150\n            return projectCircle(d.proportion, (d.depth - 1) * attrs.distance)[0]\n          })\n\n        // manually set y positions (which is calculated using d3.cluster)\n        force.y = d3.forceY()\n          .strength(0.5)\n          .y(function (d) {\n\n            // if node does not have children and is channel (depth=2) , then position it on parent's coordinate\n            if (!d.children && d.depth > 2) {\n              if (d.parent) {\n                d = d.parent\n              }\n            }\n\n            // custom circle projection -  radius will be -  (d.depth - 1) * 150\n            return projectCircle(d.proportion, (d.depth - 1) * attrs.distance)[1]\n          })\n\n        // ---------------------------------  INITIALISE FORCE SIMULATION ----------------------------\n\n        // get based on top parameter simulation\n        force.simulation = d3.forceSimulation()\n          .force(\"link\", force.link)\n          .force(\"charge\", force.charge)\n          .force(\"center\", force.center)\n          .force(\"collide\", force.collide)\n          .force(\"x\", force.x)\n          .force(\"y\", force.y)\n\n        // ###########################   HIERARCHY STUFF #########################\n\n        // flatten root\n        let arr = flatten(hierarchy.root)\n\n        // hide members based on their depth\n        arr.forEach((d) => {\n          // Hide fake root node\n          if ((attrs.fakeRoot) && (d.depth === 1)) {\n            d.hidden = true\n          }\n\n          if (d.depth > attrs.hiddenChildLevel) {\n            d._children = d.children\n            d.children = null\n          }\n        })\n\n        // ####################################  DRAWINGS #######################\n\n        // drawing containers\n        let container = d3.select(this)\n\n        // add svg\n        let svg = container.patternify({ tag: \"svg\", selector: \"svg-chart-container\" })\n          .attr(\"width\", attrs.svgWidth)\n          .attr(\"height\", attrs.svgHeight)\n          // .call(behaviors.zoom)\n\n        // add container g element\n        let chart = svg.patternify({ tag: \"g\", selector: \"chart\" })\n          .attr(\"transform\", `translate(${calc.chartLeftMargin},${calc.chartTopMargin})`)\n\n        // ################################   Chart Content Drawing ##################################\n\n        // link wrapper\n        let linksWrapper = chart.patternify({ tag: \"g\", selector: \"links-wrapper\" })\n\n        // node wrapper\n        let nodesWrapper = chart.patternify({ tag: \"g\", selector: \"nodes-wrapper\" })\n        let links, nodes\n\n        // reusable function which updates visual based on data change\n        update()\n\n        // update visual based on data change\n        function update(clickedNode) {\n\n          // Show/hide reset button\n          (clickedNode) ? $btnReset.removeClass(\"invisible\") : $btnReset.addClass(\"invisible\")\n\n          // set xy and proportion properties with custom radial layout\n          layouts.radial(hierarchy.root)\n\n          // nodes and links array\n          let nodesArr = flatten(hierarchy.root, true)\n            .orderBy((d) => d.depth)\n            .filter((d) => !d.hidden)\n\n          let linksArr = hierarchy.root.links()\n            .filter((d) => !d.source.hidden)\n            .filter((d) => !d.target.hidden)\n\n          // make new nodes to appear near the parents\n          nodesArr.forEach(function (d) {\n            if (clickedNode && clickedNode.id === (d.parent && d.parent.id)) {\n              d.x = d.parent.x\n              d.y = d.parent.y\n            }\n          })\n\n          // links\n          links = linksWrapper.selectAll(\".link\")\n            .data(linksArr, (d) => d.target.id)\n          links.exit().remove()\n\n          links = links.enter()\n            .append(\"line\")\n            .attr(\"class\", \"link\")\n            .merge(links)\n\n          // node groups\n          nodes = nodesWrapper.selectAll(\".node\")\n            .data(nodesArr, (d) => d.id)\n          nodes.exit().remove()\n\n          let enteredNodes = nodes.enter()\n            .append(\"g\")\n            .attr(\"class\", \"node\")\n\n          // bind event handlers\n          enteredNodes\n            .on(\"click\", nodeClick)\n            .on(\"mouseenter\", nodeMouseEnter)\n            .on(\"mouseleave\", nodeMouseLeave)\n            .call(behaviors.drag)\n\n          // channels grandchildren\n          enteredNodes.append(\"rect\")\n            .attr(\"class\", \"as-card\")\n            .attr(\"rx\", 4)\n            .attr(\"ry\", 4)\n\n          enteredNodes.append(\"text\")\n            .attr(\"class\", \"as-text\")\n            .text((d) => d.data.name)\n\n          enteredNodes.selectAll(\"text\").each(function(d) {\n            d.bbox = this.getBBox()\n          })\n\n          enteredNodes.selectAll(\"rect\")\n            .attr(\"x\", (d) => d.bbox.x - attrs.nodeGutter.x)\n            .attr(\"y\", (d) => d.bbox.y - attrs.nodeGutter.y)\n            .attr(\"width\", (d) => d.bbox.width + (2 * attrs.nodeGutter.x))\n            .attr(\"height\", (d) => d.bbox.height + (2 * attrs.nodeGutter.y))\n\n          // append circle & text only when there are children\n          enteredNodes\n            .append(\"circle\")\n            .filter((d) => Boolean(d.children) || Boolean(d._children))\n            .attr(\"class\", \"as-circle\")\n            .attr(\"r\", attrs.childrenIndicatorRadius)\n            .attr(\"cx\", (d) => d.bbox.x + d.bbox.width + attrs.nodeGutter.x)\n            .attr(\"cy\", (d) => d.bbox.y + d.bbox.height + attrs.nodeGutter.y)\n\n          enteredNodes\n            .append(\"text\")\n            .filter((d) => Boolean(d.children) || Boolean(d._children))\n            .attr(\"class\", \"as-text\")\n            .attr(\"dx\", (d) => d.bbox.x + d.bbox.width + attrs.nodeGutter.x)\n            .attr(\"dy\", attrs.childrenIndicatorRadius + 3)\n            .text((d) => d3.max([(d.children || {}).length, (d._children || {}).length]))\n\n          // merge  node groups and style it\n          nodes = enteredNodes.merge(nodes)\n\n          // force simulation\n          force.simulation.nodes(nodesArr).on(\"tick\", ticked)\n\n          // links simulation\n          force.simulation.force(\"link\").links(links).id((d) => d.id).distance(attrs.distance * 2).strength(2)\n        }\n\n        // ####################################### EVENT HANDLERS  ########################\n\n        // zoom handler\n        // function zoomed() {\n        //   // get transform event\n        //   let transform = d3.event.transform\n        //   attrs.lastTransform = transform\n        //\n        //   // apply transform event props to the wrapper\n        //   chart.attr(\"transform\", transform)\n        //\n        //   svg.selectAll(\".node\").attr(\"transform\", (d) => `translate(${d.x},${d.y}) scale(${1 / (attrs.lastTransform ? attrs.lastTransform.k : 1)})`)\n        //   svg.selectAll(\".link\").attr(\"stroke-width\", attrs.lineStrokeWidth / (attrs.lastTransform ? attrs.lastTransform.k : 1))\n        // }\n\n        // tick handler\n        function ticked() {\n          const fakeBorderWidth = attrs.fakeBorderWidth\n          const maxXValueAvailable = (value) => Math.max(Math.min(calc.chartWidth - fakeBorderWidth, value), fakeBorderWidth)\n          const maxYValueAvailable = (value) => Math.max(Math.min(calc.chartHeight - fakeBorderWidth, value), fakeBorderWidth)\n          // set links position\n          links\n            .attr(\"x1\", (d) => maxXValueAvailable(d.source.x))\n            .attr(\"y1\", (d) => maxYValueAvailable(d.source.y))\n            .attr(\"x2\", (d) => maxXValueAvailable(d.target.x))\n            .attr(\"y2\", (d) => maxYValueAvailable(d.target.y))\n\n          // set nodes position\n          svg.selectAll(\".node\")\n            .attr(\"transform\", (d) => `translate(${maxXValueAvailable(d.x)},${maxYValueAvailable(d.y)})`)\n        }\n\n        // handler drag start event\n        function dragstarted() {\n          // disable node fixing\n          nodes.each((d) => {\n            d.fx = null\n            d.fy = null\n          })\n        }\n\n        // handle dragging event\n        function dragged(d) {\n          // make dragged node fixed\n          d.fx = d3.event.x\n          d.fy = d3.event.y\n        }\n\n        // -------------------- handle drag end event ---------------\n        function dragended() {\n          // we are doing nothing, here , aren't we?\n        }\n\n        // -------------------------- node mouse hover handler ---------------\n        function nodeMouseEnter(d) {\n          // get links\n          let _links = hierarchy.root.links()\n\n          // get hovered node connected links\n          let connectedLinks = _links.filter((l) => l.source.id === d.id || l.target.id === d.id)\n\n          // get hovered node linked nodes\n          let linkedNodes = connectedLinks.map((s) => s.source.id).concat(connectedLinks.map((c) => c.target.id))\n\n          // reduce all other nodes opacity\n          nodesWrapper.selectAll(\".node\")\n            .filter((n) => linkedNodes.indexOf(n.id) === -1)\n            .attr(\"opacity\", attrs.hoverOpacity)\n\n          // reduce all other links opacity\n          linksWrapper.selectAll(\".link\")\n            .attr(\"opacity\", attrs.hoverOpacity)\n\n          // highlight hovered nodes connections\n          linksWrapper.selectAll(\".link\")\n            .filter((l) => l.source.id === d.id || l.target.id === d.id)\n            .attr(\"opacity\", 1)\n        }\n\n        // --------------- handle mouseleave event ---------------\n        function nodeMouseLeave() {\n          // return things back to normal\n          nodesWrapper.selectAll(\".node\")\n            .attr(\"opacity\", 1)\n          linksWrapper.selectAll(\".link\")\n            .attr(\"opacity\", 1)\n        }\n\n        // --------------- handle node click event ---------------\n        function nodeClick(d) {\n          // free fixed nodes\n          nodes.each((di) => {\n            di.fx = null\n            di.fy = null\n          })\n\n          // collapse or expand node\n          if (d.children) {\n            collapse(d)\n          } else if (d._children) {\n            expand(d)\n          } else {\n          // nothing is to collapse or expand\n          }\n\n          freeNodes()\n        }\n\n        // #########################################  UTIL FUNCS ##################################\n        updateData = function () {\n          main.run()\n        }\n\n        collapse = function (d, deep = false) {\n          if (d.children) {\n            if (deep) {\n              d.children.forEach((e) => collapse(e, true))\n            }\n\n            d._children = d.children\n            d.children = null\n          }\n\n          update(d)\n          force.simulation.restart()\n          force.simulation.alphaTarget(0.15)\n        }\n\n        expand = function (d, deep = false) {\n          if (d._children) {\n            if (deep) {\n              d._children.forEach((e) => expand(e, true))\n            }\n\n            d.children = d._children\n            d._children = null\n          }\n\n          update(d)\n          force.simulation.restart()\n          force.simulation.alphaTarget(0.15)\n        }\n\n        // function slowDownNodes() {\n        //   force.simulation.alphaTarget(0.05)\n        // }\n\n        // function speedUpNodes() {\n        //   force.simulation.alphaTarget(0.45)\n        // }\n\n        function freeNodes() {\n          d3.selectAll(\".node\").each((n) => {\n            n.fx = null\n            n.fy = null\n          })\n        }\n\n        function projectCircle(value, radius) {\n          let r = radius || 0\n          let corner = value * 2 * Math.PI\n          return [Math.sin(corner) * r, -Math.cos(corner) * r]\n        }\n\n        // recursively loop on children and extract nodes as an array\n        function flatten(root, clustered) {\n          let nodesArray = []\n          let i = 0\n          function recurse(node, depth) {\n            if (node.children) {\n              node.children.forEach(function (child) {\n                recurse(child, depth + 1)\n              })\n            }\n\n            if (!node.id) {\n              node.id = ++i\n            } else {\n              ++i\n            }\n\n            node.depth = depth\n            if (clustered) {\n              if (!node.cluster) {\n              // if cluster coordinates are not set, set it\n                node.cluster = { x: node.x, y: node.y }\n              }\n            }\n            nodesArray.push(node)\n          }\n          recurse(root, 1)\n          return nodesArray\n        }\n\n        function debug() {\n          if (attrs.isDebug) {\n          // stringify func\n            let stringified = String(scope)\n\n            // parse variable names\n            let groupVariables = stringified\n              // match var x-xx= {}\n              .match(/var\\s+([\\w])+\\s*=\\s*{\\s*}/gi)\n              // match xxx\n              .map((d) => d.match(/\\s+\\w*/gi).filter((s) => s.trim()))\n              // get xxx\n              .map((v) => v[0].trim())\n\n            // assign local variables to the scope\n            groupVariables.forEach((v) => {\n              main[`P_${v}`] = eval(v)\n            })\n          }\n        }\n\n        debug()\n\n      })\n    }\n\n    // ----------- PROTOTYEPE FUNCTIONS  ----------------------\n    d3.selection.prototype.patternify = function (_params) {\n      let selector = _params.selector\n      let elementTag = _params.tag\n      let _data = _params.data || [selector]\n\n      // pattern in action\n      let selection = this.selectAll(`.${selector}`).data(_data)\n      selection.exit().remove()\n      selection = selection.enter().append(elementTag).merge(selection)\n      selection.attr(\"class\", selector)\n\n      return selection\n    }\n\n    // custom radial layout\n    function radial() {\n      return function (root) {\n\n        recurse(root, 0, 1)\n\n        function recurse(node, min, max) {\n          node.proportion = (max + min) / 2\n          if (!node.x) {\n\n            // if node has parent, match entered node positions to it's parent\n            if (node.parent) {\n              node.x = node.parent.x\n            } else {\n              node.x = 0\n            }\n          }\n\n          // if node had parent, match entered node positions to it's parent\n          if (!node.y) {\n            if (node.parent) {\n              node.y = node.parent.y\n            } else {\n              node.y = 0\n            }\n          }\n\n          // recursively do the same for children\n          if (node.children) {\n            let offset = (max - min) / node.children.length\n            node.children.forEach(function (child, i) {\n              let newMin = min + (offset * i)\n              let newMax = newMin + offset\n\n              recurse(child, newMin, newMax)\n            })\n          }\n        }\n      }\n    }\n\n    // https://github.com/bumbeishvili/d3js-boilerplates#orderby\n    Array.prototype.orderBy = function (func) {\n      this.sort((_a, _b) => {\n        let a = func(_a)\n        let b = func(_b)\n        if (typeof a === \"string\" || a instanceof String) {\n          return a.localeCompare(b)\n        }\n        return a - b\n      })\n\n      return this\n    }\n\n    // ##########################  BOILEPLATE STUFF ################\n\n    // dinamic keys functions\n    Object.keys(attrs).forEach((key) => {\n      // Attach variables to main function\n      return main[key] = function (_) {\n        let string = `attrs['${key}'] = _`\n\n        if (!arguments.length) {\n          return eval(` attrs['${key}'];`)\n        }\n\n        eval(string)\n\n        return main\n      }\n    })\n\n    // set attrs as property\n    main.attrs = attrs\n\n    // debugging visuals\n    main.debug = function (isDebug) {\n      attrs.isDebug = isDebug\n      if (isDebug) {\n        if (!window.charts) {\n          window.charts = []\n        }\n        window.charts.push(main)\n      }\n      return main\n    }\n\n    // exposed update functions\n    main.data = function (value) {\n      if (!arguments.length) {\n        return attrs.data\n      }\n\n      attrs.data = value\n      if (typeof updateData === \"function\") {\n        updateData()\n      }\n      return main\n    }\n\n    // run  visual\n    main.run = function () {\n      d3.selectAll(attrs.container)\n        .call(main)\n      return main\n    }\n\n    main.filter = function (filterParams) {\n      if (!arguments.length) {\n        return attrs.filterParams\n      }\n\n      attrs.filterParams = filterParams\n      if (typeof filter === \"function\") {\n        filter()\n      }\n      return main\n    }\n\n    main.reset = function () {\n\n      hierarchy.root.children.forEach((e) => collapse(e, true))\n      main.run()\n\n      return main\n    }\n\n    return main\n  }\n\n  // initialization\n  $orgChartContainer.each((i, container) => {\n\n    let $container = $(container)\n    let width = $container.width()\n    let height = width / (16 / 9)\n\n    d3.json($container.data(\"url\")).then((data) => {\n      // Make a fake previous node if the data entry is not hierarchical\n      if (data instanceof Array) {\n        fake = true\n        dataDepicted = {\n          name: null,\n          children: data\n        }\n      } else {\n        dataDepicted = data\n      }\n\n      orgchart = renderChartCollapsibleNetwork()\n        .svgHeight(height)\n        .svgWidth(width)\n        .fakeRoot(fake)\n        .container(`#${container.id}`)\n        .data({\n          root: dataDepicted\n        })\n        .debug(true)\n        .run()\n    })\n  })\n\n  // reset\n  $btnReset.click(function() {\n    orgchart.reset()\n  })\n}\n\n$(() => {\n  renderChart(renderOrgCharts);\n})\n"]},"metadata":{},"sourceType":"module"}